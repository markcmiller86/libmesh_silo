# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Copyright (c) 1994 - 2010, Lawrence Livermore National Security, LLC.
# LLNL-CODE-425250.
# All rights reserved.
# 
# This file is part of Silo. For details, see silo.llnl.gov.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the disclaimer below.
#    * Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the disclaimer (as noted
#      below) in the documentation and/or other materials provided with
#      the distribution.
#    * Neither the name of the LLNS/LLNL nor the names of its
#      contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
# 
# THIS SOFTWARE  IS PROVIDED BY  THE COPYRIGHT HOLDERS  AND CONTRIBUTORS
# "AS  IS" AND  ANY EXPRESS  OR IMPLIED  WARRANTIES, INCLUDING,  BUT NOT
# LIMITED TO, THE IMPLIED  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A  PARTICULAR  PURPOSE ARE  DISCLAIMED.  IN  NO  EVENT SHALL  LAWRENCE
# LIVERMORE  NATIONAL SECURITY, LLC,  THE U.S.  DEPARTMENT OF  ENERGY OR
# CONTRIBUTORS BE LIABLE FOR  ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR  CONSEQUENTIAL DAMAGES  (INCLUDING, BUT NOT  LIMITED TO,
# PROCUREMENT OF  SUBSTITUTE GOODS  OR SERVICES; LOSS  OF USE,  DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER  IN CONTRACT, STRICT LIABILITY,  OR TORT (INCLUDING
# NEGLIGENCE OR  OTHERWISE) ARISING IN  ANY WAY OUT  OF THE USE  OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# 
# This work was produced at Lawrence Livermore National Laboratory under
# Contract No.  DE-AC52-07NA27344 with the DOE.
# 
# Neither the  United States Government nor  Lawrence Livermore National
# Security, LLC nor any of  their employees, makes any warranty, express
# or  implied,  or  assumes  any  liability or  responsibility  for  the
# accuracy, completeness,  or usefulness of  any information, apparatus,
# product, or  process disclosed, or  represents that its use  would not
# infringe privately-owned rights.
# 
# Any reference herein to  any specific commercial products, process, or
# services by trade name,  trademark, manufacturer or otherwise does not
# necessarily  constitute or imply  its endorsement,  recommendation, or
# favoring  by  the  United  States  Government  or  Lawrence  Livermore
# National Security,  LLC. The views  and opinions of  authors expressed
# herein do not necessarily state  or reflect those of the United States
# Government or Lawrence Livermore National Security, LLC, and shall not
# be used for advertising or product endorsement purposes.
#

# making use of the autotest features in autoconf
# 

# some example commands to compile ioperf plugins
# gcc -shared -I. ioperf_sec2.c -o libiop_sec2.so
# gcc -shared -I. ioperf_stdio.c -o libiop_stdio.so
# gcc -shared -I. -I/usr/gapps/silo/hdf5/1.8.1/i686_Linux_ELsmp/include ioperf_hdf5.c -o libiop_hdf5.so /usr/gapps/silo/hdf5/1.8.1/i686_Linux_ELsmp/lib/libhdf5.a

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
check_PROGRAMS = arbpoly$(EXEEXT) arbpoly2d$(EXEEXT) array$(EXEEXT) \
	extface$(EXEEXT) multi_test$(EXEEXT) partial_io$(EXEEXT) \
	point$(EXEEXT) group_test$(EXEEXT) listtypes$(EXEEXT) \
	simple$(EXEEXT) ucd$(EXEEXT) ucdsamp3$(EXEEXT) \
	testall$(EXEEXT) alltypes$(EXEEXT) obj$(EXEEXT) \
	onehex$(EXEEXT) oneprism$(EXEEXT) onepyramid$(EXEEXT) \
	onetet$(EXEEXT) TestReadMask$(EXEEXT) subhex$(EXEEXT) \
	twohex$(EXEEXT) multispec$(EXEEXT) specmix$(EXEEXT) \
	sami$(EXEEXT) spec$(EXEEXT) cpz1plt$(EXEEXT) \
	merge_block$(EXEEXT) mat3d_3across$(EXEEXT) ucd1d$(EXEEXT) \
	wave$(EXEEXT) multi_file$(EXEEXT) polyzl$(EXEEXT) csg$(EXEEXT) \
	rocket$(EXEEXT) mmadjacency$(EXEEXT) largefile$(EXEEXT) \
	dir$(EXEEXT) quad$(EXEEXT) version$(EXEEXT) \
	namescheme$(EXEEXT) efcentering$(EXEEXT) mk_nasf_pdb$(EXEEXT) \
	ioperf$(EXEEXT) readstuff$(EXEEXT) testfs$(EXEEXT) \
	empty$(EXEEXT) $(am__EXEEXT_1) $(am__EXEEXT_3) $(am__EXEEXT_5)
@HDF5_DRV_NEEDED_TRUE@am__append_1 = $(HDF5PROGS)
@HDF5_DRV_NEEDED_TRUE@am__append_2 = $(HDF5PROGS)
@HDF5_DRV_NEEDED_TRUE@am__append_3 = $(HDF5CKLTLIBS)
@FORTRAN_NEEDED_TRUE@am__append_4 = $(FCPROGS)
@FORTRAN_NEEDED_TRUE@am__append_5 = $(FCPROGS)
subdir = tests
DIST_COMMON = $(include_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/ax_check_compiler_flags.m4 \
	$(top_srcdir)/config/ax_have_qt.m4 \
	$(top_srcdir)/config/libtool.m4 \
	$(top_srcdir)/config/ltoptions.m4 \
	$(top_srcdir)/config/ltsugar.m4 \
	$(top_srcdir)/config/ltversion.m4 \
	$(top_srcdir)/config/lt~obsolete.m4 \
	$(top_srcdir)/config/vl_lib_readline.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
ioperf_hdf5_la_LIBADD =
ioperf_hdf5_la_SOURCES = ioperf_hdf5.c
ioperf_hdf5_la_OBJECTS = ioperf_hdf5.lo
ioperf_hdf5_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(ioperf_hdf5_la_LDFLAGS) $(LDFLAGS) -o $@
@HDF5_DRV_NEEDED_TRUE@am_ioperf_hdf5_la_rpath =
ioperf_pdb_la_LIBADD =
ioperf_pdb_la_SOURCES = ioperf_pdb.c
ioperf_pdb_la_OBJECTS = ioperf_pdb.lo
ioperf_pdb_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(ioperf_pdb_la_LDFLAGS) $(LDFLAGS) -o $@
ioperf_sec2_la_LIBADD =
ioperf_sec2_la_SOURCES = ioperf_sec2.c
ioperf_sec2_la_OBJECTS = ioperf_sec2.lo
ioperf_sec2_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(ioperf_sec2_la_LDFLAGS) $(LDFLAGS) -o $@
ioperf_silo_la_LIBADD =
ioperf_silo_la_SOURCES = ioperf_silo.c
ioperf_silo_la_OBJECTS = ioperf_silo.lo
ioperf_silo_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(ioperf_silo_la_LDFLAGS) $(LDFLAGS) -o $@
ioperf_stdio_la_LIBADD =
ioperf_stdio_la_SOURCES = ioperf_stdio.c
ioperf_stdio_la_OBJECTS = ioperf_stdio.lo
ioperf_stdio_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(ioperf_stdio_la_LDFLAGS) $(LDFLAGS) -o $@
rocket_silo_la_LIBADD =
am_rocket_silo_la_OBJECTS = rocket_silo.lo
rocket_silo_la_OBJECTS = $(am_rocket_silo_la_OBJECTS)
rocket_silo_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(rocket_silo_la_LDFLAGS) $(LDFLAGS) -o $@
@INSTALL_LITE_HEADERS_TRUE@am__EXEEXT_1 = testpdb$(EXEEXT) \
@INSTALL_LITE_HEADERS_TRUE@	pdbtst$(EXEEXT)
am__EXEEXT_2 = compression$(EXEEXT) grab$(EXEEXT) mk_nasf_h5$(EXEEXT)
@HDF5_DRV_NEEDED_TRUE@am__EXEEXT_3 = $(am__EXEEXT_2)
am__EXEEXT_4 = arrayf77$(EXEEXT) curvef77$(EXEEXT) matf77$(EXEEXT) \
	pointf77$(EXEEXT) quadf77$(EXEEXT) ucdf77$(EXEEXT) \
	testallf77$(EXEEXT) csgmesh$(EXEEXT)
@FORTRAN_NEEDED_TRUE@am__EXEEXT_5 = $(am__EXEEXT_4)
TestReadMask_SOURCES = TestReadMask.c
TestReadMask_OBJECTS = TestReadMask.$(OBJEXT)
TestReadMask_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@TestReadMask_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@TestReadMask_DEPENDENCIES = ../src/libsiloh5.la
alltypes_SOURCES = alltypes.c
alltypes_OBJECTS = alltypes.$(OBJEXT)
alltypes_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@alltypes_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@alltypes_DEPENDENCIES = ../src/libsiloh5.la
arbpoly_SOURCES = arbpoly.c
arbpoly_OBJECTS = arbpoly.$(OBJEXT)
arbpoly_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@arbpoly_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@arbpoly_DEPENDENCIES = ../src/libsiloh5.la
arbpoly2d_SOURCES = arbpoly2d.c
arbpoly2d_OBJECTS = arbpoly2d.$(OBJEXT)
arbpoly2d_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@arbpoly2d_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@arbpoly2d_DEPENDENCIES = ../src/libsiloh5.la
array_SOURCES = array.c
array_OBJECTS = array.$(OBJEXT)
array_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@array_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@array_DEPENDENCIES = ../src/libsiloh5.la
am__arrayf77_SOURCES_DIST = arrayf77.f
@FORTRAN_NEEDED_TRUE@am_arrayf77_OBJECTS = arrayf77.$(OBJEXT)
arrayf77_OBJECTS = $(am_arrayf77_OBJECTS)
am__DEPENDENCIES_1 =
@FORTRAN_NEEDED_TRUE@arrayf77_DEPENDENCIES = $(LDADD) \
@FORTRAN_NEEDED_TRUE@	$(am__DEPENDENCIES_1)
am__compression_SOURCES_DIST = compression.c
@HDF5_DRV_NEEDED_TRUE@am_compression_OBJECTS = compression.$(OBJEXT)
compression_OBJECTS = $(am_compression_OBJECTS)
@HDF5_DRV_NEEDED_TRUE@compression_DEPENDENCIES = $(LDADD)
cpz1plt_SOURCES = cpz1plt.c
cpz1plt_OBJECTS = cpz1plt.$(OBJEXT)
cpz1plt_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@cpz1plt_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@cpz1plt_DEPENDENCIES = ../src/libsiloh5.la
csg_SOURCES = csg.c
csg_OBJECTS = csg.$(OBJEXT)
csg_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@csg_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@csg_DEPENDENCIES = ../src/libsiloh5.la
am__csgmesh_SOURCES_DIST = csgmesh.f
@FORTRAN_NEEDED_TRUE@am_csgmesh_OBJECTS = csgmesh.$(OBJEXT)
csgmesh_OBJECTS = $(am_csgmesh_OBJECTS)
@FORTRAN_NEEDED_TRUE@csgmesh_DEPENDENCIES = $(LDADD) \
@FORTRAN_NEEDED_TRUE@	$(am__DEPENDENCIES_1)
am__curvef77_SOURCES_DIST = curvef77.f
@FORTRAN_NEEDED_TRUE@am_curvef77_OBJECTS = curvef77.$(OBJEXT)
curvef77_OBJECTS = $(am_curvef77_OBJECTS)
@FORTRAN_NEEDED_TRUE@curvef77_DEPENDENCIES = $(LDADD) \
@FORTRAN_NEEDED_TRUE@	$(am__DEPENDENCIES_1)
am_dir_OBJECTS = dir.$(OBJEXT) testlib.$(OBJEXT)
dir_OBJECTS = $(am_dir_OBJECTS)
dir_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@dir_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@dir_DEPENDENCIES = ../src/libsiloh5.la
efcentering_SOURCES = efcentering.c
efcentering_OBJECTS = efcentering.$(OBJEXT)
efcentering_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@efcentering_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@efcentering_DEPENDENCIES = ../src/libsiloh5.la
empty_SOURCES = empty.c
empty_OBJECTS = empty.$(OBJEXT)
empty_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@empty_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@empty_DEPENDENCIES = ../src/libsiloh5.la
extface_SOURCES = extface.c
extface_OBJECTS = extface.$(OBJEXT)
extface_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@extface_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@extface_DEPENDENCIES = ../src/libsiloh5.la
am__grab_SOURCES_DIST = grab.c
@HDF5_DRV_NEEDED_TRUE@am_grab_OBJECTS = grab.$(OBJEXT)
grab_OBJECTS = $(am_grab_OBJECTS)
@HDF5_DRV_NEEDED_TRUE@grab_DEPENDENCIES = $(LDADD)
group_test_SOURCES = group_test.c
group_test_OBJECTS = group_test.$(OBJEXT)
group_test_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@group_test_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@group_test_DEPENDENCIES = ../src/libsiloh5.la
ioperf_SOURCES = ioperf.c
ioperf_OBJECTS = ioperf.$(OBJEXT)
ioperf_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@ioperf_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@ioperf_DEPENDENCIES = ../src/libsiloh5.la
ioperf_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(ioperf_LDFLAGS) $(LDFLAGS) -o $@
largefile_SOURCES = largefile.c
largefile_OBJECTS = largefile.$(OBJEXT)
largefile_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@largefile_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@largefile_DEPENDENCIES = ../src/libsiloh5.la
listtypes_SOURCES = listtypes.c
listtypes_OBJECTS = listtypes.$(OBJEXT)
listtypes_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@listtypes_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@listtypes_DEPENDENCIES = ../src/libsiloh5.la
mat3d_3across_SOURCES = mat3d_3across.c
mat3d_3across_OBJECTS = mat3d_3across.$(OBJEXT)
mat3d_3across_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@mat3d_3across_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@mat3d_3across_DEPENDENCIES =  \
@HDF5_DRV_NEEDED_TRUE@	../src/libsiloh5.la
am__matf77_SOURCES_DIST = matf77.f
@FORTRAN_NEEDED_TRUE@am_matf77_OBJECTS = matf77.$(OBJEXT)
matf77_OBJECTS = $(am_matf77_OBJECTS)
@FORTRAN_NEEDED_TRUE@matf77_DEPENDENCIES = $(LDADD) \
@FORTRAN_NEEDED_TRUE@	$(am__DEPENDENCIES_1)
merge_block_SOURCES = merge_block.c
merge_block_OBJECTS = merge_block.$(OBJEXT)
merge_block_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@merge_block_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@merge_block_DEPENDENCIES = ../src/libsiloh5.la
am__mk_nasf_h5_SOURCES_DIST = mk_nasf_h5.c
@HDF5_DRV_NEEDED_TRUE@am_mk_nasf_h5_OBJECTS = mk_nasf_h5.$(OBJEXT)
mk_nasf_h5_OBJECTS = $(am_mk_nasf_h5_OBJECTS)
@HDF5_DRV_NEEDED_TRUE@mk_nasf_h5_DEPENDENCIES = $(LDADD)
mk_nasf_pdb_SOURCES = mk_nasf_pdb.c
mk_nasf_pdb_OBJECTS = mk_nasf_pdb.$(OBJEXT)
mk_nasf_pdb_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@mk_nasf_pdb_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@mk_nasf_pdb_DEPENDENCIES = ../src/libsiloh5.la
mmadjacency_SOURCES = mmadjacency.c
mmadjacency_OBJECTS = mmadjacency.$(OBJEXT)
mmadjacency_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@mmadjacency_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@mmadjacency_DEPENDENCIES = ../src/libsiloh5.la
multi_file_SOURCES = multi_file.c
multi_file_OBJECTS = multi_file.$(OBJEXT)
multi_file_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@multi_file_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@multi_file_DEPENDENCIES = ../src/libsiloh5.la
multi_test_SOURCES = multi_test.c
multi_test_OBJECTS = multi_test.$(OBJEXT)
multi_test_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@multi_test_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@multi_test_DEPENDENCIES = ../src/libsiloh5.la
multispec_SOURCES = multispec.c
multispec_OBJECTS = multispec.$(OBJEXT)
multispec_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@multispec_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@multispec_DEPENDENCIES = ../src/libsiloh5.la
namescheme_SOURCES = namescheme.c
namescheme_OBJECTS = namescheme.$(OBJEXT)
namescheme_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@namescheme_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@namescheme_DEPENDENCIES = ../src/libsiloh5.la
obj_SOURCES = obj.c
obj_OBJECTS = obj.$(OBJEXT)
obj_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@obj_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@obj_DEPENDENCIES = ../src/libsiloh5.la
onehex_SOURCES = onehex.c
onehex_OBJECTS = onehex.$(OBJEXT)
onehex_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@onehex_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@onehex_DEPENDENCIES = ../src/libsiloh5.la
oneprism_SOURCES = oneprism.c
oneprism_OBJECTS = oneprism.$(OBJEXT)
oneprism_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@oneprism_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@oneprism_DEPENDENCIES = ../src/libsiloh5.la
onepyramid_SOURCES = onepyramid.c
onepyramid_OBJECTS = onepyramid.$(OBJEXT)
onepyramid_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@onepyramid_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@onepyramid_DEPENDENCIES = ../src/libsiloh5.la
onetet_SOURCES = onetet.c
onetet_OBJECTS = onetet.$(OBJEXT)
onetet_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@onetet_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@onetet_DEPENDENCIES = ../src/libsiloh5.la
partial_io_SOURCES = partial_io.c
partial_io_OBJECTS = partial_io.$(OBJEXT)
partial_io_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@partial_io_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@partial_io_DEPENDENCIES = ../src/libsiloh5.la
pdbtst_SOURCES = pdbtst.c
pdbtst_OBJECTS = pdbtst-pdbtst.$(OBJEXT)
pdbtst_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@pdbtst_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@pdbtst_DEPENDENCIES = ../src/libsiloh5.la
point_SOURCES = point.c
point_OBJECTS = point.$(OBJEXT)
point_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@point_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@point_DEPENDENCIES = ../src/libsiloh5.la
am__pointf77_SOURCES_DIST = pointf77.f
@FORTRAN_NEEDED_TRUE@am_pointf77_OBJECTS = pointf77.$(OBJEXT)
pointf77_OBJECTS = $(am_pointf77_OBJECTS)
@FORTRAN_NEEDED_TRUE@pointf77_DEPENDENCIES = $(LDADD) \
@FORTRAN_NEEDED_TRUE@	$(am__DEPENDENCIES_1)
polyzl_SOURCES = polyzl.c
polyzl_OBJECTS = polyzl.$(OBJEXT)
polyzl_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@polyzl_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@polyzl_DEPENDENCIES = ../src/libsiloh5.la
am_quad_OBJECTS = quad.$(OBJEXT) testlib.$(OBJEXT)
quad_OBJECTS = $(am_quad_OBJECTS)
quad_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@quad_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@quad_DEPENDENCIES = ../src/libsiloh5.la
am__quadf77_SOURCES_DIST = quadf77.f
@FORTRAN_NEEDED_TRUE@am_quadf77_OBJECTS = quadf77.$(OBJEXT)
quadf77_OBJECTS = $(am_quadf77_OBJECTS)
@FORTRAN_NEEDED_TRUE@quadf77_DEPENDENCIES = $(LDADD) \
@FORTRAN_NEEDED_TRUE@	$(am__DEPENDENCIES_1)
readstuff_SOURCES = readstuff.c
readstuff_OBJECTS = readstuff.$(OBJEXT)
readstuff_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@readstuff_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@readstuff_DEPENDENCIES = ../src/libsiloh5.la
am_rocket_OBJECTS = rocket-rocket.$(OBJEXT)
rocket_OBJECTS = $(am_rocket_OBJECTS)
rocket_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@rocket_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@rocket_DEPENDENCIES = ../src/libsiloh5.la
rocket_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(rocket_CXXFLAGS) $(CXXFLAGS) \
	$(rocket_LDFLAGS) $(LDFLAGS) -o $@
sami_SOURCES = sami.c
sami_OBJECTS = sami.$(OBJEXT)
sami_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@sami_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@sami_DEPENDENCIES = ../src/libsiloh5.la
simple_SOURCES = simple.c
simple_OBJECTS = simple.$(OBJEXT)
simple_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@simple_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@simple_DEPENDENCIES = ../src/libsiloh5.la
spec_SOURCES = spec.c
spec_OBJECTS = spec.$(OBJEXT)
spec_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@spec_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@spec_DEPENDENCIES = ../src/libsiloh5.la
specmix_SOURCES = specmix.c
specmix_OBJECTS = specmix.$(OBJEXT)
specmix_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@specmix_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@specmix_DEPENDENCIES = ../src/libsiloh5.la
subhex_SOURCES = subhex.c
subhex_OBJECTS = subhex.$(OBJEXT)
subhex_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@subhex_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@subhex_DEPENDENCIES = ../src/libsiloh5.la
testall_SOURCES = testall.c
testall_OBJECTS = testall.$(OBJEXT)
testall_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@testall_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@testall_DEPENDENCIES = ../src/libsiloh5.la
am__testallf77_SOURCES_DIST = testallf77.f
@FORTRAN_NEEDED_TRUE@am_testallf77_OBJECTS = testallf77.$(OBJEXT)
testallf77_OBJECTS = $(am_testallf77_OBJECTS)
@FORTRAN_NEEDED_TRUE@testallf77_DEPENDENCIES = $(LDADD) \
@FORTRAN_NEEDED_TRUE@	$(am__DEPENDENCIES_1)
testfs_SOURCES = testfs.c
testfs_OBJECTS = testfs.$(OBJEXT)
testfs_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@testfs_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@testfs_DEPENDENCIES = ../src/libsiloh5.la
testpdb_SOURCES = testpdb.c
testpdb_OBJECTS = testpdb-testpdb.$(OBJEXT)
testpdb_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@testpdb_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@testpdb_DEPENDENCIES = ../src/libsiloh5.la
twohex_SOURCES = twohex.c
twohex_OBJECTS = twohex.$(OBJEXT)
twohex_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@twohex_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@twohex_DEPENDENCIES = ../src/libsiloh5.la
ucd_SOURCES = ucd.c
ucd_OBJECTS = ucd.$(OBJEXT)
ucd_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@ucd_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@ucd_DEPENDENCIES = ../src/libsiloh5.la
ucd1d_SOURCES = ucd1d.c
ucd1d_OBJECTS = ucd1d.$(OBJEXT)
ucd1d_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@ucd1d_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@ucd1d_DEPENDENCIES = ../src/libsiloh5.la
am__ucdf77_SOURCES_DIST = ucdf77.f
@FORTRAN_NEEDED_TRUE@am_ucdf77_OBJECTS = ucdf77.$(OBJEXT)
ucdf77_OBJECTS = $(am_ucdf77_OBJECTS)
@FORTRAN_NEEDED_TRUE@ucdf77_DEPENDENCIES = $(LDADD) \
@FORTRAN_NEEDED_TRUE@	$(am__DEPENDENCIES_1)
ucdsamp3_SOURCES = ucdsamp3.c
ucdsamp3_OBJECTS = ucdsamp3.$(OBJEXT)
ucdsamp3_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@ucdsamp3_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@ucdsamp3_DEPENDENCIES = ../src/libsiloh5.la
version_SOURCES = version.c
version_OBJECTS = version.$(OBJEXT)
version_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@version_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@version_DEPENDENCIES = ../src/libsiloh5.la
wave_SOURCES = wave.c
wave_OBJECTS = wave.$(OBJEXT)
wave_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_FALSE@wave_DEPENDENCIES = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@wave_DEPENDENCIES = ../src/libsiloh5.la
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
F77COMPILE = $(F77) $(AM_FFLAGS) $(FFLAGS)
LTF77COMPILE = $(LIBTOOL) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(F77) $(AM_FFLAGS) $(FFLAGS)
F77LD = $(F77)
F77LINK = $(LIBTOOL) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(F77LD) $(AM_FFLAGS) $(FFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = ioperf_hdf5.c ioperf_pdb.c ioperf_sec2.c ioperf_silo.c \
	ioperf_stdio.c $(rocket_silo_la_SOURCES) \
	$(nodist_EXTRA_TestReadMask_SOURCES) TestReadMask.c \
	$(nodist_EXTRA_alltypes_SOURCES) alltypes.c \
	$(nodist_EXTRA_arbpoly_SOURCES) arbpoly.c \
	$(nodist_EXTRA_arbpoly2d_SOURCES) arbpoly2d.c \
	$(nodist_EXTRA_array_SOURCES) array.c $(arrayf77_SOURCES) \
	$(nodist_EXTRA_arrayf77_SOURCES) $(compression_SOURCES) \
	$(nodist_EXTRA_compression_SOURCES) \
	$(nodist_EXTRA_cpz1plt_SOURCES) cpz1plt.c \
	$(nodist_EXTRA_csg_SOURCES) csg.c $(csgmesh_SOURCES) \
	$(nodist_EXTRA_csgmesh_SOURCES) $(curvef77_SOURCES) \
	$(nodist_EXTRA_curvef77_SOURCES) $(dir_SOURCES) \
	$(nodist_EXTRA_dir_SOURCES) \
	$(nodist_EXTRA_efcentering_SOURCES) efcentering.c \
	$(nodist_EXTRA_empty_SOURCES) empty.c \
	$(nodist_EXTRA_extface_SOURCES) extface.c $(grab_SOURCES) \
	$(nodist_EXTRA_grab_SOURCES) \
	$(nodist_EXTRA_group_test_SOURCES) group_test.c \
	$(nodist_EXTRA_ioperf_SOURCES) ioperf.c \
	$(nodist_EXTRA_largefile_SOURCES) largefile.c \
	$(nodist_EXTRA_listtypes_SOURCES) listtypes.c \
	$(nodist_EXTRA_mat3d_3across_SOURCES) mat3d_3across.c \
	$(matf77_SOURCES) $(nodist_EXTRA_matf77_SOURCES) \
	$(nodist_EXTRA_merge_block_SOURCES) merge_block.c \
	$(mk_nasf_h5_SOURCES) $(nodist_EXTRA_mk_nasf_pdb_SOURCES) \
	mk_nasf_pdb.c $(nodist_EXTRA_mmadjacency_SOURCES) \
	mmadjacency.c $(nodist_EXTRA_multi_file_SOURCES) multi_file.c \
	$(nodist_EXTRA_multi_test_SOURCES) multi_test.c \
	$(nodist_EXTRA_multispec_SOURCES) multispec.c \
	$(nodist_EXTRA_namescheme_SOURCES) namescheme.c \
	$(nodist_EXTRA_obj_SOURCES) obj.c \
	$(nodist_EXTRA_onehex_SOURCES) onehex.c \
	$(nodist_EXTRA_oneprism_SOURCES) oneprism.c \
	$(nodist_EXTRA_onepyramid_SOURCES) onepyramid.c \
	$(nodist_EXTRA_onetet_SOURCES) onetet.c \
	$(nodist_EXTRA_partial_io_SOURCES) partial_io.c \
	$(nodist_EXTRA_pdbtst_SOURCES) pdbtst.c \
	$(nodist_EXTRA_point_SOURCES) point.c $(pointf77_SOURCES) \
	$(nodist_EXTRA_pointf77_SOURCES) \
	$(nodist_EXTRA_polyzl_SOURCES) polyzl.c $(quad_SOURCES) \
	$(nodist_EXTRA_quad_SOURCES) $(quadf77_SOURCES) \
	$(nodist_EXTRA_quadf77_SOURCES) \
	$(nodist_EXTRA_readstuff_SOURCES) readstuff.c \
	$(rocket_SOURCES) $(nodist_EXTRA_sami_SOURCES) sami.c \
	$(nodist_EXTRA_simple_SOURCES) simple.c \
	$(nodist_EXTRA_spec_SOURCES) spec.c \
	$(nodist_EXTRA_specmix_SOURCES) specmix.c \
	$(nodist_EXTRA_subhex_SOURCES) subhex.c \
	$(nodist_EXTRA_testall_SOURCES) testall.c \
	$(testallf77_SOURCES) $(nodist_EXTRA_testallf77_SOURCES) \
	$(nodist_EXTRA_testfs_SOURCES) testfs.c \
	$(nodist_EXTRA_testpdb_SOURCES) testpdb.c \
	$(nodist_EXTRA_twohex_SOURCES) twohex.c \
	$(nodist_EXTRA_ucd_SOURCES) ucd.c \
	$(nodist_EXTRA_ucd1d_SOURCES) ucd1d.c $(ucdf77_SOURCES) \
	$(nodist_EXTRA_ucdf77_SOURCES) \
	$(nodist_EXTRA_ucdsamp3_SOURCES) ucdsamp3.c \
	$(nodist_EXTRA_version_SOURCES) version.c \
	$(nodist_EXTRA_wave_SOURCES) wave.c
DIST_SOURCES = ioperf_hdf5.c ioperf_pdb.c ioperf_sec2.c ioperf_silo.c \
	ioperf_stdio.c $(rocket_silo_la_SOURCES) TestReadMask.c \
	alltypes.c arbpoly.c arbpoly2d.c array.c \
	$(am__arrayf77_SOURCES_DIST) $(am__compression_SOURCES_DIST) \
	cpz1plt.c csg.c $(am__csgmesh_SOURCES_DIST) \
	$(am__curvef77_SOURCES_DIST) $(dir_SOURCES) efcentering.c \
	empty.c extface.c $(am__grab_SOURCES_DIST) group_test.c \
	ioperf.c largefile.c listtypes.c mat3d_3across.c \
	$(am__matf77_SOURCES_DIST) merge_block.c \
	$(am__mk_nasf_h5_SOURCES_DIST) mk_nasf_pdb.c mmadjacency.c \
	multi_file.c multi_test.c multispec.c namescheme.c obj.c \
	onehex.c oneprism.c onepyramid.c onetet.c partial_io.c \
	pdbtst.c point.c $(am__pointf77_SOURCES_DIST) polyzl.c \
	$(quad_SOURCES) $(am__quadf77_SOURCES_DIST) readstuff.c \
	$(rocket_SOURCES) sami.c simple.c spec.c specmix.c subhex.c \
	testall.c $(am__testallf77_SOURCES_DIST) testfs.c testpdb.c \
	twohex.c ucd.c ucd1d.c $(am__ucdf77_SOURCES_DIST) ucdsamp3.c \
	version.c wave.c
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(includedir)"
HEADERS = $(include_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BROWSER = @BROWSER@
BUNDLE_TARGET = @BUNDLE_TARGET@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CC_FULLPATH = @CC_FULLPATH@
CFLAGS = @CFLAGS@
CONFIG_CMD = @CONFIG_CMD@
CONFIG_DATE = @CONFIG_DATE@
CONFIG_USER = @CONFIG_USER@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CXX_FULLPATH = @CXX_FULLPATH@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FC = @FC@
FCFLAGS = @FCFLAGS@
FCLIBS = @FCLIBS@
FC_FULLPATH = @FC_FULLPATH@
FFLAGS = @FFLAGS@
FGREP = @FGREP@
FORTRAN = @FORTRAN@
FPZIP = @FPZIP@
GREP = @GREP@
HDF5_DRV = @HDF5_DRV@
HZIP = @HZIP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBM = @LIBM@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NETCDF = @NETCDF@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PDBP_DRV = @PDBP_DRV@
PDB_DRV = @PDB_DRV@
PYTHON = @PYTHON@
PYTHONMODULE = @PYTHONMODULE@
PYTHON_CPPFLAGS = @PYTHON_CPPFLAGS@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_VERSION = @PYTHON_VERSION@
QT_CXXFLAGS = @QT_CXXFLAGS@
QT_DIR = @QT_DIR@
QT_LIBS = @QT_LIBS@
QT_LRELEASE = @QT_LRELEASE@
QT_LUPDATE = @QT_LUPDATE@
QT_MOC = @QT_MOC@
QT_UIC = @QT_UIC@
RANLIB = @RANLIB@
READLINE_LIBS = @READLINE_LIBS@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SILEX = @SILEX@
SILO_DTYPPTR = @SILO_DTYPPTR@
SILO_DTYPPTR1 = @SILO_DTYPPTR1@
SILO_DTYPPTR2 = @SILO_DTYPPTR2@
SILO_VERS_MAJ = @SILO_VERS_MAJ@
SILO_VERS_MIN = @SILO_VERS_MIN@
SILO_VERS_PAT = @SILO_VERS_PAT@
SILO_VERS_PRE = @SILO_VERS_PRE@
SILO_VERS_TAG = @SILO_VERS_TAG@
STRIP = @STRIP@
TAURUS = @TAURUS@
VERSION = @VERSION@
XMKMF = @XMKMF@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
ZLIB = @ZLIB@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_ct_F77 = @ac_ct_F77@
ac_ct_FC = @ac_ct_FC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
EXTRA_DIST = \
 package.m4 \
 pdbcmp.csh \
 testsuite.at \
 testsuite \
 pmpio_hdf5_test.c \
 pmpio_silo_test_mesh.c \
 add_amr_mrgtree.c \
 amr3d.silo \
 amr2d.silo \
 amr2d_mesh_config.xml \
 amr3d_mesh_config.xml \
 not_a_silo_file.h5 \
 not_a_silo_file.pdb \
 ioperf_sec2.c \
 ioperf_stdio.c \
 ioperf_hdf5.c \
 ioperf_pdb.c \
 ioperf_silo.c \
 rocket.h \
 Make_ioperf \
 ioperf_tests \
 std.c \
 zeros.dat \
 $(check_SCRIPTS) \
 $(check_DATA)

include_HEADERS = \
 ioperf.h


# Note: use top entry in check_SCRIPTS as sole target to
# copy all scripts and data in one rule
check_SCRIPTS = \
 checksums \
 testhzip \
 testxvers \
 test_error.py \
 test_read.py \
 test_write.py \
 testonehex \
 testsilock \
 testdtypes

check_DATA = \
 xvers_data.tar.bz2 \
 pion0244.silo

DISTCLEANFILES = atconfig
AUTOM4TE = autom4te
AUTOTEST = $(AUTOM4TE) --language=autotest
TESTSUITE = $(srcdir)/testsuite
@HDF5_DRV_NEEDED_FALSE@LDADD = ../src/libsilo.la
@HDF5_DRV_NEEDED_TRUE@LDADD = ../src/libsiloh5.la

# paths look at install directories before sources
AM_CPPFLAGS = \
 -I$(srcdir)/../src/pdb \
 -I$(srcdir)/../src/score \
 -I$(builddir)/../src/silo \
 -I$(srcdir)/../src/silo \
 -I$(includedir)

@INSTALL_LITE_HEADERS_TRUE@PDBTESTS = testpdb pdbtst
#quad_CPPFLAGS = $(AM_CPPFLAGS)
PDBTESTS = 
@INSTALL_LITE_HEADERS_TRUE@testpdb_CPPFLAGS = -DPDB_LITE $(AM_CPPFLAGS)
@INSTALL_LITE_HEADERS_TRUE@pdbtst_CPPFLAGS = -DPDB_LITE $(AM_CPPFLAGS)
#TestReadMask_CPPFLAGS = $(AM_CPPFLAGS)
AM_FFLAGS = $(AM_CPPFLAGS)
HDF5PROGS = compression grab mk_nasf_h5
FCPROGS = arrayf77 curvef77 matf77 pointf77 quadf77 ucdf77 testallf77 \
         csgmesh

PROGS = array dir extface multi_test partial_io point quad simple ucd \
	ucdsamp3 testall obj onehex oneprism onepyramid onetet subhex \
	TestReadMask twohex multispec sami specmix spec cpz1plt \
	group_test listtypes alltypes wave multi_file polyzl csg \
	rocket mmadjacency largefile version namescheme efcentering \
	mk_nasf_pdb ioperf arbpoly2d readstuff mat3d_3across \
	merge_block empty $(PDBTESTS) $(am__append_1) $(am__append_4)
dir_SOURCES = dir.c testlib.c
quad_SOURCES = quad.c testlib.c
rocket_SOURCES = rocket.cxx
rocket_LDFLAGS = -ldl
rocket_CXXFLAGS = -rdynamic
EXTRA_rocket_DEPENDENCIES = rocket_silo.la

# plugins for rocket and for ioperf
HDF5CKLTLIBS = ioperf_hdf5.la
check_LTLIBRARIES = rocket_silo.la ioperf_silo.la ioperf_pdb.la \
	ioperf_sec2.la ioperf_stdio.la $(am__append_3)
rocket_silo_la_SOURCES = rocket_silo.cxx
# the '-rpath /nowhere' is some trick to force libtool to produce a shared lib
rocket_silo_la_LDFLAGS = -module -avoid-version -rpath /nowhere
EXTRA_ioperf_DEPENDENCIES = ioperf_silo.la ioperf_hdf5.la ioperf_pdb.la ioperf_sec2.la ioperf_stdio.la
ioperf_LDFLAGS = -ldl
ioperf_CXXFALGS = -rdynamic
# the '-rpath /nowhere' is some trick to force libtool to produce a shared lib
ioperf_silo_la_LDFLAGS = -module -avoid-version -rpath /nowhere
ioperf_hdf5_la_LDFLAGS = -module -avoid-version -rpath /nowhere
ioperf_pdb_la_LDFLAGS = -module -avoid-version -rpath /nowhere
ioperf_sec2_la_LDFLAGS = -module -avoid-version -rpath /nowhere
ioperf_stdio_la_LDFLAGS = -module -avoid-version -rpath /nowhere

# Deal with need to use c++ linker whenever we've got C++
# sources compiled with the silo library and the fact that
# Automake/gmake won't let me just say LINK=$(CXXLINK). 
# This is a hack to force c++ linkage when we have
# c++ code compiled into Silo. I got this hack from
# automake manaual.
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_arbpoly_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_arbpoly2d_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_array_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_extface_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_multi_test_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_partial_io_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_point_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_group_test_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_listtypes_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_simple_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_ucd_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_ucdsamp3_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_testall_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_alltypes_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_obj_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_onehex_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_oneprism_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_onepyramid_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_onetet_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_TestReadMask_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_subhex_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_twohex_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_multispec_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_specmix_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_testpdb_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_pdbtst_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_sami_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_spec_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_cpz1plt_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_merge_block_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_mat3d_3across_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_ucd1d_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_wave_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_multi_file_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_polyzl_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_csg_SOURCES = dummy.cxx
# nodist_EXTRA_rocket_SOURCES = dummy.cxx
# nodist_EXTRA_rocket_silo_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_mmadjacency_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_largefile_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_dir_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_quad_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_version_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_namescheme_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_arrayf77_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_curvef77_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_matf77_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_pointf77_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_quadf77_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_ucdf77_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_testallf77_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_csgmesh_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_compression_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_grab_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_efcentering_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_mk_nasf_pdb_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_ioperf_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_readstuff_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_testfs_SOURCES = dummy.cxx
@CXX_LINK_NEEDED_TRUE@nodist_EXTRA_empty_SOURCES = dummy.cxx
@HDF5_DRV_NEEDED_TRUE@compression_SOURCES = compression.c
@HDF5_DRV_NEEDED_TRUE@compression_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_TRUE@grab_SOURCES = grab.c
@HDF5_DRV_NEEDED_TRUE@grab_LDADD = $(LDADD)
@HDF5_DRV_NEEDED_TRUE@mk_nasf_h5_SOURCES = mk_nasf_h5.c
@HDF5_DRV_NEEDED_TRUE@mk_nasf_h5_LDADD = $(LDADD)
@FORTRAN_NEEDED_TRUE@arrayf77_SOURCES = arrayf77.f
@FORTRAN_NEEDED_TRUE@arrayf77_LDADD = $(LDADD) $(FCLIBS)
@FORTRAN_NEEDED_TRUE@curvef77_SOURCES = curvef77.f
@FORTRAN_NEEDED_TRUE@curvef77_LDADD = $(LDADD) $(FCLIBS)
@FORTRAN_NEEDED_TRUE@matf77_SOURCES = matf77.f
@FORTRAN_NEEDED_TRUE@matf77_LDADD = $(LDADD) $(FCLIBS)
@FORTRAN_NEEDED_TRUE@pointf77_SOURCES = pointf77.f
@FORTRAN_NEEDED_TRUE@pointf77_LDADD = $(LDADD) $(FCLIBS)
@FORTRAN_NEEDED_TRUE@quadf77_SOURCES = quadf77.f
@FORTRAN_NEEDED_TRUE@quadf77_LDADD = $(LDADD) $(FCLIBS)
@FORTRAN_NEEDED_TRUE@ucdf77_SOURCES = ucdf77.f
@FORTRAN_NEEDED_TRUE@ucdf77_LDADD = $(LDADD) $(FCLIBS)
@FORTRAN_NEEDED_TRUE@testallf77_SOURCES = testallf77.f
@FORTRAN_NEEDED_TRUE@testallf77_LDADD = $(LDADD) $(FCLIBS)
@FORTRAN_NEEDED_TRUE@csgmesh_SOURCES = csgmesh.f
@FORTRAN_NEEDED_TRUE@csgmesh_LDADD = $(LDADD) $(FCLIBS)
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cxx .f .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkLTLIBRARIES:
	-test -z "$(check_LTLIBRARIES)" || rm -f $(check_LTLIBRARIES)
	@list='$(check_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
ioperf_hdf5.la: $(ioperf_hdf5_la_OBJECTS) $(ioperf_hdf5_la_DEPENDENCIES) 
	$(ioperf_hdf5_la_LINK) $(am_ioperf_hdf5_la_rpath) $(ioperf_hdf5_la_OBJECTS) $(ioperf_hdf5_la_LIBADD) $(LIBS)
ioperf_pdb.la: $(ioperf_pdb_la_OBJECTS) $(ioperf_pdb_la_DEPENDENCIES) 
	$(ioperf_pdb_la_LINK)  $(ioperf_pdb_la_OBJECTS) $(ioperf_pdb_la_LIBADD) $(LIBS)
ioperf_sec2.la: $(ioperf_sec2_la_OBJECTS) $(ioperf_sec2_la_DEPENDENCIES) 
	$(ioperf_sec2_la_LINK)  $(ioperf_sec2_la_OBJECTS) $(ioperf_sec2_la_LIBADD) $(LIBS)
ioperf_silo.la: $(ioperf_silo_la_OBJECTS) $(ioperf_silo_la_DEPENDENCIES) 
	$(ioperf_silo_la_LINK)  $(ioperf_silo_la_OBJECTS) $(ioperf_silo_la_LIBADD) $(LIBS)
ioperf_stdio.la: $(ioperf_stdio_la_OBJECTS) $(ioperf_stdio_la_DEPENDENCIES) 
	$(ioperf_stdio_la_LINK)  $(ioperf_stdio_la_OBJECTS) $(ioperf_stdio_la_LIBADD) $(LIBS)
rocket_silo.la: $(rocket_silo_la_OBJECTS) $(rocket_silo_la_DEPENDENCIES) 
	$(rocket_silo_la_LINK)  $(rocket_silo_la_OBJECTS) $(rocket_silo_la_LIBADD) $(LIBS)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
TestReadMask$(EXEEXT): $(TestReadMask_OBJECTS) $(TestReadMask_DEPENDENCIES) 
	@rm -f TestReadMask$(EXEEXT)
	$(CXXLINK) $(TestReadMask_OBJECTS) $(TestReadMask_LDADD) $(LIBS)
alltypes$(EXEEXT): $(alltypes_OBJECTS) $(alltypes_DEPENDENCIES) 
	@rm -f alltypes$(EXEEXT)
	$(CXXLINK) $(alltypes_OBJECTS) $(alltypes_LDADD) $(LIBS)
arbpoly$(EXEEXT): $(arbpoly_OBJECTS) $(arbpoly_DEPENDENCIES) 
	@rm -f arbpoly$(EXEEXT)
	$(CXXLINK) $(arbpoly_OBJECTS) $(arbpoly_LDADD) $(LIBS)
arbpoly2d$(EXEEXT): $(arbpoly2d_OBJECTS) $(arbpoly2d_DEPENDENCIES) 
	@rm -f arbpoly2d$(EXEEXT)
	$(CXXLINK) $(arbpoly2d_OBJECTS) $(arbpoly2d_LDADD) $(LIBS)
array$(EXEEXT): $(array_OBJECTS) $(array_DEPENDENCIES) 
	@rm -f array$(EXEEXT)
	$(CXXLINK) $(array_OBJECTS) $(array_LDADD) $(LIBS)
arrayf77$(EXEEXT): $(arrayf77_OBJECTS) $(arrayf77_DEPENDENCIES) 
	@rm -f arrayf77$(EXEEXT)
	$(CXXLINK) $(arrayf77_OBJECTS) $(arrayf77_LDADD) $(LIBS)
compression$(EXEEXT): $(compression_OBJECTS) $(compression_DEPENDENCIES) 
	@rm -f compression$(EXEEXT)
	$(CXXLINK) $(compression_OBJECTS) $(compression_LDADD) $(LIBS)
cpz1plt$(EXEEXT): $(cpz1plt_OBJECTS) $(cpz1plt_DEPENDENCIES) 
	@rm -f cpz1plt$(EXEEXT)
	$(CXXLINK) $(cpz1plt_OBJECTS) $(cpz1plt_LDADD) $(LIBS)
csg$(EXEEXT): $(csg_OBJECTS) $(csg_DEPENDENCIES) 
	@rm -f csg$(EXEEXT)
	$(CXXLINK) $(csg_OBJECTS) $(csg_LDADD) $(LIBS)
csgmesh$(EXEEXT): $(csgmesh_OBJECTS) $(csgmesh_DEPENDENCIES) 
	@rm -f csgmesh$(EXEEXT)
	$(CXXLINK) $(csgmesh_OBJECTS) $(csgmesh_LDADD) $(LIBS)
curvef77$(EXEEXT): $(curvef77_OBJECTS) $(curvef77_DEPENDENCIES) 
	@rm -f curvef77$(EXEEXT)
	$(CXXLINK) $(curvef77_OBJECTS) $(curvef77_LDADD) $(LIBS)
dir$(EXEEXT): $(dir_OBJECTS) $(dir_DEPENDENCIES) 
	@rm -f dir$(EXEEXT)
	$(CXXLINK) $(dir_OBJECTS) $(dir_LDADD) $(LIBS)
efcentering$(EXEEXT): $(efcentering_OBJECTS) $(efcentering_DEPENDENCIES) 
	@rm -f efcentering$(EXEEXT)
	$(CXXLINK) $(efcentering_OBJECTS) $(efcentering_LDADD) $(LIBS)
empty$(EXEEXT): $(empty_OBJECTS) $(empty_DEPENDENCIES) 
	@rm -f empty$(EXEEXT)
	$(CXXLINK) $(empty_OBJECTS) $(empty_LDADD) $(LIBS)
extface$(EXEEXT): $(extface_OBJECTS) $(extface_DEPENDENCIES) 
	@rm -f extface$(EXEEXT)
	$(CXXLINK) $(extface_OBJECTS) $(extface_LDADD) $(LIBS)
grab$(EXEEXT): $(grab_OBJECTS) $(grab_DEPENDENCIES) 
	@rm -f grab$(EXEEXT)
	$(CXXLINK) $(grab_OBJECTS) $(grab_LDADD) $(LIBS)
group_test$(EXEEXT): $(group_test_OBJECTS) $(group_test_DEPENDENCIES) 
	@rm -f group_test$(EXEEXT)
	$(CXXLINK) $(group_test_OBJECTS) $(group_test_LDADD) $(LIBS)
ioperf$(EXEEXT): $(ioperf_OBJECTS) $(ioperf_DEPENDENCIES) 
	@rm -f ioperf$(EXEEXT)
	$(ioperf_LINK) $(ioperf_OBJECTS) $(ioperf_LDADD) $(LIBS)
largefile$(EXEEXT): $(largefile_OBJECTS) $(largefile_DEPENDENCIES) 
	@rm -f largefile$(EXEEXT)
	$(CXXLINK) $(largefile_OBJECTS) $(largefile_LDADD) $(LIBS)
listtypes$(EXEEXT): $(listtypes_OBJECTS) $(listtypes_DEPENDENCIES) 
	@rm -f listtypes$(EXEEXT)
	$(CXXLINK) $(listtypes_OBJECTS) $(listtypes_LDADD) $(LIBS)
mat3d_3across$(EXEEXT): $(mat3d_3across_OBJECTS) $(mat3d_3across_DEPENDENCIES) 
	@rm -f mat3d_3across$(EXEEXT)
	$(CXXLINK) $(mat3d_3across_OBJECTS) $(mat3d_3across_LDADD) $(LIBS)
matf77$(EXEEXT): $(matf77_OBJECTS) $(matf77_DEPENDENCIES) 
	@rm -f matf77$(EXEEXT)
	$(CXXLINK) $(matf77_OBJECTS) $(matf77_LDADD) $(LIBS)
merge_block$(EXEEXT): $(merge_block_OBJECTS) $(merge_block_DEPENDENCIES) 
	@rm -f merge_block$(EXEEXT)
	$(CXXLINK) $(merge_block_OBJECTS) $(merge_block_LDADD) $(LIBS)
mk_nasf_h5$(EXEEXT): $(mk_nasf_h5_OBJECTS) $(mk_nasf_h5_DEPENDENCIES) 
	@rm -f mk_nasf_h5$(EXEEXT)
	$(LINK) $(mk_nasf_h5_OBJECTS) $(mk_nasf_h5_LDADD) $(LIBS)
mk_nasf_pdb$(EXEEXT): $(mk_nasf_pdb_OBJECTS) $(mk_nasf_pdb_DEPENDENCIES) 
	@rm -f mk_nasf_pdb$(EXEEXT)
	$(CXXLINK) $(mk_nasf_pdb_OBJECTS) $(mk_nasf_pdb_LDADD) $(LIBS)
mmadjacency$(EXEEXT): $(mmadjacency_OBJECTS) $(mmadjacency_DEPENDENCIES) 
	@rm -f mmadjacency$(EXEEXT)
	$(CXXLINK) $(mmadjacency_OBJECTS) $(mmadjacency_LDADD) $(LIBS)
multi_file$(EXEEXT): $(multi_file_OBJECTS) $(multi_file_DEPENDENCIES) 
	@rm -f multi_file$(EXEEXT)
	$(CXXLINK) $(multi_file_OBJECTS) $(multi_file_LDADD) $(LIBS)
multi_test$(EXEEXT): $(multi_test_OBJECTS) $(multi_test_DEPENDENCIES) 
	@rm -f multi_test$(EXEEXT)
	$(CXXLINK) $(multi_test_OBJECTS) $(multi_test_LDADD) $(LIBS)
multispec$(EXEEXT): $(multispec_OBJECTS) $(multispec_DEPENDENCIES) 
	@rm -f multispec$(EXEEXT)
	$(CXXLINK) $(multispec_OBJECTS) $(multispec_LDADD) $(LIBS)
namescheme$(EXEEXT): $(namescheme_OBJECTS) $(namescheme_DEPENDENCIES) 
	@rm -f namescheme$(EXEEXT)
	$(CXXLINK) $(namescheme_OBJECTS) $(namescheme_LDADD) $(LIBS)
obj$(EXEEXT): $(obj_OBJECTS) $(obj_DEPENDENCIES) 
	@rm -f obj$(EXEEXT)
	$(CXXLINK) $(obj_OBJECTS) $(obj_LDADD) $(LIBS)
onehex$(EXEEXT): $(onehex_OBJECTS) $(onehex_DEPENDENCIES) 
	@rm -f onehex$(EXEEXT)
	$(CXXLINK) $(onehex_OBJECTS) $(onehex_LDADD) $(LIBS)
oneprism$(EXEEXT): $(oneprism_OBJECTS) $(oneprism_DEPENDENCIES) 
	@rm -f oneprism$(EXEEXT)
	$(CXXLINK) $(oneprism_OBJECTS) $(oneprism_LDADD) $(LIBS)
onepyramid$(EXEEXT): $(onepyramid_OBJECTS) $(onepyramid_DEPENDENCIES) 
	@rm -f onepyramid$(EXEEXT)
	$(CXXLINK) $(onepyramid_OBJECTS) $(onepyramid_LDADD) $(LIBS)
onetet$(EXEEXT): $(onetet_OBJECTS) $(onetet_DEPENDENCIES) 
	@rm -f onetet$(EXEEXT)
	$(CXXLINK) $(onetet_OBJECTS) $(onetet_LDADD) $(LIBS)
partial_io$(EXEEXT): $(partial_io_OBJECTS) $(partial_io_DEPENDENCIES) 
	@rm -f partial_io$(EXEEXT)
	$(CXXLINK) $(partial_io_OBJECTS) $(partial_io_LDADD) $(LIBS)
pdbtst$(EXEEXT): $(pdbtst_OBJECTS) $(pdbtst_DEPENDENCIES) 
	@rm -f pdbtst$(EXEEXT)
	$(CXXLINK) $(pdbtst_OBJECTS) $(pdbtst_LDADD) $(LIBS)
point$(EXEEXT): $(point_OBJECTS) $(point_DEPENDENCIES) 
	@rm -f point$(EXEEXT)
	$(CXXLINK) $(point_OBJECTS) $(point_LDADD) $(LIBS)
pointf77$(EXEEXT): $(pointf77_OBJECTS) $(pointf77_DEPENDENCIES) 
	@rm -f pointf77$(EXEEXT)
	$(CXXLINK) $(pointf77_OBJECTS) $(pointf77_LDADD) $(LIBS)
polyzl$(EXEEXT): $(polyzl_OBJECTS) $(polyzl_DEPENDENCIES) 
	@rm -f polyzl$(EXEEXT)
	$(CXXLINK) $(polyzl_OBJECTS) $(polyzl_LDADD) $(LIBS)
quad$(EXEEXT): $(quad_OBJECTS) $(quad_DEPENDENCIES) 
	@rm -f quad$(EXEEXT)
	$(CXXLINK) $(quad_OBJECTS) $(quad_LDADD) $(LIBS)
quadf77$(EXEEXT): $(quadf77_OBJECTS) $(quadf77_DEPENDENCIES) 
	@rm -f quadf77$(EXEEXT)
	$(CXXLINK) $(quadf77_OBJECTS) $(quadf77_LDADD) $(LIBS)
readstuff$(EXEEXT): $(readstuff_OBJECTS) $(readstuff_DEPENDENCIES) 
	@rm -f readstuff$(EXEEXT)
	$(CXXLINK) $(readstuff_OBJECTS) $(readstuff_LDADD) $(LIBS)
rocket$(EXEEXT): $(rocket_OBJECTS) $(rocket_DEPENDENCIES) 
	@rm -f rocket$(EXEEXT)
	$(rocket_LINK) $(rocket_OBJECTS) $(rocket_LDADD) $(LIBS)
sami$(EXEEXT): $(sami_OBJECTS) $(sami_DEPENDENCIES) 
	@rm -f sami$(EXEEXT)
	$(CXXLINK) $(sami_OBJECTS) $(sami_LDADD) $(LIBS)
simple$(EXEEXT): $(simple_OBJECTS) $(simple_DEPENDENCIES) 
	@rm -f simple$(EXEEXT)
	$(CXXLINK) $(simple_OBJECTS) $(simple_LDADD) $(LIBS)
spec$(EXEEXT): $(spec_OBJECTS) $(spec_DEPENDENCIES) 
	@rm -f spec$(EXEEXT)
	$(CXXLINK) $(spec_OBJECTS) $(spec_LDADD) $(LIBS)
specmix$(EXEEXT): $(specmix_OBJECTS) $(specmix_DEPENDENCIES) 
	@rm -f specmix$(EXEEXT)
	$(CXXLINK) $(specmix_OBJECTS) $(specmix_LDADD) $(LIBS)
subhex$(EXEEXT): $(subhex_OBJECTS) $(subhex_DEPENDENCIES) 
	@rm -f subhex$(EXEEXT)
	$(CXXLINK) $(subhex_OBJECTS) $(subhex_LDADD) $(LIBS)
testall$(EXEEXT): $(testall_OBJECTS) $(testall_DEPENDENCIES) 
	@rm -f testall$(EXEEXT)
	$(CXXLINK) $(testall_OBJECTS) $(testall_LDADD) $(LIBS)
testallf77$(EXEEXT): $(testallf77_OBJECTS) $(testallf77_DEPENDENCIES) 
	@rm -f testallf77$(EXEEXT)
	$(CXXLINK) $(testallf77_OBJECTS) $(testallf77_LDADD) $(LIBS)
testfs$(EXEEXT): $(testfs_OBJECTS) $(testfs_DEPENDENCIES) 
	@rm -f testfs$(EXEEXT)
	$(CXXLINK) $(testfs_OBJECTS) $(testfs_LDADD) $(LIBS)
testpdb$(EXEEXT): $(testpdb_OBJECTS) $(testpdb_DEPENDENCIES) 
	@rm -f testpdb$(EXEEXT)
	$(CXXLINK) $(testpdb_OBJECTS) $(testpdb_LDADD) $(LIBS)
twohex$(EXEEXT): $(twohex_OBJECTS) $(twohex_DEPENDENCIES) 
	@rm -f twohex$(EXEEXT)
	$(CXXLINK) $(twohex_OBJECTS) $(twohex_LDADD) $(LIBS)
ucd$(EXEEXT): $(ucd_OBJECTS) $(ucd_DEPENDENCIES) 
	@rm -f ucd$(EXEEXT)
	$(CXXLINK) $(ucd_OBJECTS) $(ucd_LDADD) $(LIBS)
ucd1d$(EXEEXT): $(ucd1d_OBJECTS) $(ucd1d_DEPENDENCIES) 
	@rm -f ucd1d$(EXEEXT)
	$(CXXLINK) $(ucd1d_OBJECTS) $(ucd1d_LDADD) $(LIBS)
ucdf77$(EXEEXT): $(ucdf77_OBJECTS) $(ucdf77_DEPENDENCIES) 
	@rm -f ucdf77$(EXEEXT)
	$(CXXLINK) $(ucdf77_OBJECTS) $(ucdf77_LDADD) $(LIBS)
ucdsamp3$(EXEEXT): $(ucdsamp3_OBJECTS) $(ucdsamp3_DEPENDENCIES) 
	@rm -f ucdsamp3$(EXEEXT)
	$(CXXLINK) $(ucdsamp3_OBJECTS) $(ucdsamp3_LDADD) $(LIBS)
version$(EXEEXT): $(version_OBJECTS) $(version_DEPENDENCIES) 
	@rm -f version$(EXEEXT)
	$(CXXLINK) $(version_OBJECTS) $(version_LDADD) $(LIBS)
wave$(EXEEXT): $(wave_OBJECTS) $(wave_DEPENDENCIES) 
	@rm -f wave$(EXEEXT)
	$(CXXLINK) $(wave_OBJECTS) $(wave_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestReadMask.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/alltypes.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/arbpoly.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/arbpoly2d.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/array.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/compression.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cpz1plt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/csg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dir.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dummy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/efcentering.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/empty.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/extface.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/grab.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/group_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ioperf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ioperf_hdf5.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ioperf_pdb.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ioperf_sec2.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ioperf_silo.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ioperf_stdio.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/largefile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/listtypes.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mat3d_3across.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/merge_block.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mk_nasf_h5.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mk_nasf_pdb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mmadjacency.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multi_file.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multi_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multispec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/namescheme.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/obj.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/onehex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/oneprism.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/onepyramid.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/onetet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/partial_io.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pdbtst-dummy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pdbtst-pdbtst.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/point.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/polyzl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/quad.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/readstuff.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rocket-rocket.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rocket_silo.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sami.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simple.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/specmix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/subhex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testall.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testfs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testlib.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testpdb-dummy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testpdb-testpdb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twohex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ucd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ucd1d.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ucdsamp3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/version.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wave.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

pdbtst-pdbtst.o: pdbtst.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pdbtst_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pdbtst-pdbtst.o -MD -MP -MF $(DEPDIR)/pdbtst-pdbtst.Tpo -c -o pdbtst-pdbtst.o `test -f 'pdbtst.c' || echo '$(srcdir)/'`pdbtst.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/pdbtst-pdbtst.Tpo $(DEPDIR)/pdbtst-pdbtst.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='pdbtst.c' object='pdbtst-pdbtst.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pdbtst_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pdbtst-pdbtst.o `test -f 'pdbtst.c' || echo '$(srcdir)/'`pdbtst.c

pdbtst-pdbtst.obj: pdbtst.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pdbtst_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pdbtst-pdbtst.obj -MD -MP -MF $(DEPDIR)/pdbtst-pdbtst.Tpo -c -o pdbtst-pdbtst.obj `if test -f 'pdbtst.c'; then $(CYGPATH_W) 'pdbtst.c'; else $(CYGPATH_W) '$(srcdir)/pdbtst.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/pdbtst-pdbtst.Tpo $(DEPDIR)/pdbtst-pdbtst.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='pdbtst.c' object='pdbtst-pdbtst.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pdbtst_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pdbtst-pdbtst.obj `if test -f 'pdbtst.c'; then $(CYGPATH_W) 'pdbtst.c'; else $(CYGPATH_W) '$(srcdir)/pdbtst.c'; fi`

testpdb-testpdb.o: testpdb.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testpdb_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT testpdb-testpdb.o -MD -MP -MF $(DEPDIR)/testpdb-testpdb.Tpo -c -o testpdb-testpdb.o `test -f 'testpdb.c' || echo '$(srcdir)/'`testpdb.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/testpdb-testpdb.Tpo $(DEPDIR)/testpdb-testpdb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='testpdb.c' object='testpdb-testpdb.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testpdb_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o testpdb-testpdb.o `test -f 'testpdb.c' || echo '$(srcdir)/'`testpdb.c

testpdb-testpdb.obj: testpdb.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testpdb_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT testpdb-testpdb.obj -MD -MP -MF $(DEPDIR)/testpdb-testpdb.Tpo -c -o testpdb-testpdb.obj `if test -f 'testpdb.c'; then $(CYGPATH_W) 'testpdb.c'; else $(CYGPATH_W) '$(srcdir)/testpdb.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/testpdb-testpdb.Tpo $(DEPDIR)/testpdb-testpdb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='testpdb.c' object='testpdb-testpdb.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testpdb_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o testpdb-testpdb.obj `if test -f 'testpdb.c'; then $(CYGPATH_W) 'testpdb.c'; else $(CYGPATH_W) '$(srcdir)/testpdb.c'; fi`

.cxx.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cxx.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cxx.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

pdbtst-dummy.o: dummy.cxx
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pdbtst_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pdbtst-dummy.o -MD -MP -MF $(DEPDIR)/pdbtst-dummy.Tpo -c -o pdbtst-dummy.o `test -f 'dummy.cxx' || echo '$(srcdir)/'`dummy.cxx
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/pdbtst-dummy.Tpo $(DEPDIR)/pdbtst-dummy.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='dummy.cxx' object='pdbtst-dummy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pdbtst_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pdbtst-dummy.o `test -f 'dummy.cxx' || echo '$(srcdir)/'`dummy.cxx

pdbtst-dummy.obj: dummy.cxx
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pdbtst_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pdbtst-dummy.obj -MD -MP -MF $(DEPDIR)/pdbtst-dummy.Tpo -c -o pdbtst-dummy.obj `if test -f 'dummy.cxx'; then $(CYGPATH_W) 'dummy.cxx'; else $(CYGPATH_W) '$(srcdir)/dummy.cxx'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/pdbtst-dummy.Tpo $(DEPDIR)/pdbtst-dummy.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='dummy.cxx' object='pdbtst-dummy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pdbtst_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pdbtst-dummy.obj `if test -f 'dummy.cxx'; then $(CYGPATH_W) 'dummy.cxx'; else $(CYGPATH_W) '$(srcdir)/dummy.cxx'; fi`

rocket-rocket.o: rocket.cxx
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rocket_CXXFLAGS) $(CXXFLAGS) -MT rocket-rocket.o -MD -MP -MF $(DEPDIR)/rocket-rocket.Tpo -c -o rocket-rocket.o `test -f 'rocket.cxx' || echo '$(srcdir)/'`rocket.cxx
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/rocket-rocket.Tpo $(DEPDIR)/rocket-rocket.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='rocket.cxx' object='rocket-rocket.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rocket_CXXFLAGS) $(CXXFLAGS) -c -o rocket-rocket.o `test -f 'rocket.cxx' || echo '$(srcdir)/'`rocket.cxx

rocket-rocket.obj: rocket.cxx
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rocket_CXXFLAGS) $(CXXFLAGS) -MT rocket-rocket.obj -MD -MP -MF $(DEPDIR)/rocket-rocket.Tpo -c -o rocket-rocket.obj `if test -f 'rocket.cxx'; then $(CYGPATH_W) 'rocket.cxx'; else $(CYGPATH_W) '$(srcdir)/rocket.cxx'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/rocket-rocket.Tpo $(DEPDIR)/rocket-rocket.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='rocket.cxx' object='rocket-rocket.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rocket_CXXFLAGS) $(CXXFLAGS) -c -o rocket-rocket.obj `if test -f 'rocket.cxx'; then $(CYGPATH_W) 'rocket.cxx'; else $(CYGPATH_W) '$(srcdir)/rocket.cxx'; fi`

testpdb-dummy.o: dummy.cxx
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testpdb_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testpdb-dummy.o -MD -MP -MF $(DEPDIR)/testpdb-dummy.Tpo -c -o testpdb-dummy.o `test -f 'dummy.cxx' || echo '$(srcdir)/'`dummy.cxx
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/testpdb-dummy.Tpo $(DEPDIR)/testpdb-dummy.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='dummy.cxx' object='testpdb-dummy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testpdb_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testpdb-dummy.o `test -f 'dummy.cxx' || echo '$(srcdir)/'`dummy.cxx

testpdb-dummy.obj: dummy.cxx
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testpdb_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testpdb-dummy.obj -MD -MP -MF $(DEPDIR)/testpdb-dummy.Tpo -c -o testpdb-dummy.obj `if test -f 'dummy.cxx'; then $(CYGPATH_W) 'dummy.cxx'; else $(CYGPATH_W) '$(srcdir)/dummy.cxx'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/testpdb-dummy.Tpo $(DEPDIR)/testpdb-dummy.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='dummy.cxx' object='testpdb-dummy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testpdb_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testpdb-dummy.obj `if test -f 'dummy.cxx'; then $(CYGPATH_W) 'dummy.cxx'; else $(CYGPATH_W) '$(srcdir)/dummy.cxx'; fi`

.f.o:
	$(F77COMPILE) -c -o $@ $<

.f.obj:
	$(F77COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.f.lo:
	$(LTF77COMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(MKDIR_P) "$(DESTDIR)$(includedir)"
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(includedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(includedir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_LTLIBRARIES) $(check_PROGRAMS) \
	  $(check_SCRIPTS) $(check_DATA)
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: check-am
all-am: Makefile $(HEADERS) all-local
installdirs:
	for dir in "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkLTLIBRARIES clean-checkPROGRAMS clean-generic \
	clean-libtool clean-local mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-includeHEADERS

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am all-local check check-am check-local \
	clean clean-checkLTLIBRARIES clean-checkPROGRAMS clean-generic \
	clean-libtool clean-local ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-includeHEADERS


all-local:
	@echo
	@if (fmt</dev/null)>/dev/null 2>&1;then fmt="fmt -70";else fmt=cat;fi;\
	   echo 'Silo test cases are not compiled by default.  To compile and'\
	      'test them run "make check" from the silo "tests" directory.'\
	      'Otherwise you can compile them individually with "make'\
	      'TESTNAME".  The test names are: $(PROGS:=,) but "testall" is'\
	      'a good one to start with.' |\
	   $$fmt | sed 's/^/NOTICE: /'
	@echo

#
# Autotest targets.
# Since we run testsuite multiple times in different 'modes', we
# need some extra logic to contatentate all the results into a
# single, final testsuite.log.
# ATARGS = args to testsuite (autotest) script itself.
# STARGS = args to silo tests.
# By default, with no special args, we run the testsuite twice,
# first on PDB driver and then on HDF5 driver.
check-local: $(TESTSUITE) $(PROGS)
	$(SHELL) $(srcdir)/testsuite PYTHON="$(PYTHON)" BROWSER="$(BROWSER)" STARGS="$(STARGS)" $(ATARGS)
	@if test -e testsuite.log; then \
	    cp testsuite.log testsuite.log.pdb ; \
	fi
@PDBP_DRV_NEEDED_TRUE@	@if test -z "$(STARGS)"; then \
@PDBP_DRV_NEEDED_TRUE@	    $(SHELL) $(srcdir)/testsuite PYTHON="$(PYTHON)" BROWSER="$(BROWSER)" STARGS=DB_PDBP $(ATARGS); \
@PDBP_DRV_NEEDED_TRUE@	    if test -e testsuite.log; then \
@PDBP_DRV_NEEDED_TRUE@	        cp testsuite.log testsuite.log.pdbp ; \
@PDBP_DRV_NEEDED_TRUE@	    fi \
@PDBP_DRV_NEEDED_TRUE@	fi
@HDF5_DRV_NEEDED_TRUE@	@if test -z "$(STARGS)"; then \
@HDF5_DRV_NEEDED_TRUE@	    $(SHELL) $(srcdir)/testsuite PYTHON="$(PYTHON)" BROWSER="$(BROWSER)" STARGS=DB_HDF5 $(ATARGS); \
@HDF5_DRV_NEEDED_TRUE@	    if test -e testsuite.log; then \
@HDF5_DRV_NEEDED_TRUE@	        cp testsuite.log testsuite.log.hdf5; \
@HDF5_DRV_NEEDED_TRUE@	    fi \
@HDF5_DRV_NEEDED_TRUE@	fi
	@rm -f testsuite.log
	@if test -e testsuite.log.pdb; then \
	    cat testsuite.log.pdb >> testsuite.log ; \
	fi
	@if test -e testsuite.log.pdbp; then \
	    cat testsuite.log.pdbp >> testsuite.log ; \
	fi
	@if test -e testsuite.log.hdf5; then \
	    cat testsuite.log.hdf5 >> testsuite.log ; \
	fi

clean-local:
	rm -f testsuite.log
	rm -rf testsuite.dir

testsuite: $(srcdir)/testsuite.at $(top_srcdir)/VERSION
	$(AUTOTEST) -I $(srcdir) $@.at -o $@.tmp
	-mv -f $@.tmp $@

$(srcdir)/package.m4: $(top_srcdir)/configure.ac $(top_srcdir)/VERSION
	{					\
	  echo '# Signature of the current package.'; \
	  echo 'm4_define([AT_PACKAGE_NAME],      [@PACKAGE_NAME@])'; \
	  echo 'm4_define([AT_PACKAGE_TARNAME],   [@PACKAGE_TARNAME@])'; \
	  echo 'm4_define([AT_PACKAGE_VERSION],   [@PACKAGE_VERSION@])'; \
	  echo 'm4_define([AT_PACKAGE_STRING],    [@PACKAGE_STRING@])'; \
	  echo 'm4_define([AT_PACKAGE_BUGREPORT], [@PACKAGE_BUGREPORT@])'; \
	} >$(srcdir)/package.m4

# deal with the CC=mpicc until I can find a better way
# Mark C. Miller, Sat May 29 08:15:48 PDT 2010
#     put CPPFLAGS ahead of AMCPPFLAGS
resample$(EXEEXT): $(resample_OBJECTS) $(resample_DEPENDENCIES)
	@rm -f resample$(EXEEXT)
	$(LIBTOOL) --tag=CC --mode=link $(MPICC) $(AM_CFLAGS) $(CFLAGS) \
		$(AM_LDFLAGS) $(LDFLAGS) -o $@ $(resample_LDFLAGS) \
		$(resample_OBJECTS) $(resample_LDADD) $(LIBS)
resample.o: resample.c
	$(MPICC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(CPPFLAGS) $(AM_CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o resample.o `test -f 'resample.c' || echo '$(srcdir)/'`resample.c
resample.lo: resample.c
	$(LIBTOOL) --tag=CC --mode=compile $(MPICC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(CPPFLAGS) $(AM_CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o $@ $<

tests: $(PROGS)

# Single rule to capture anything put into check_DATA or check_SCRIPTS
# this assumes the only action necessary to create is a copy
checksums: copy_cksd
copy_cksd:
	@for f in $(check_SCRIPTS) $(check_DATA); do \
	    if test ! -e $$f ; then \
	        cp $(srcdir)/$$f . ;\
	    fi ;\
	done
	touch $@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
