#! /bin/sh
# Generated from testsuite.at by GNU Autoconf 2.63.
#
# Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008
# Free Software Foundation, Inc.
# This test suite is free software; the Free Software Foundation gives
# unlimited permission to copy, distribute and modify it.
#
# This work was performed under the auspices of
# the U.S. Department of Energy by
# Lawrence Livermore National Laboratory
# in part under Contract W-7405-Eng-48 and
# in part under Contract DE-AC52-07NA27344.
## --------------------- ##
## M4sh Initialization.  ##
## --------------------- ##

# Be more Bourne compatible
DUALCASE=1; export DUALCASE # for MKS sh
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else
  case `(set -o) 2>/dev/null` in
  *posix*) set -o posix ;;
esac

fi




# PATH needs CR
# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits

as_nl='
'
export as_nl
# Printing a long string crashes Solaris 7 /usr/bin/printf.
as_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo
if (test "X`printf %s $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='printf %s\n'
  as_echo_n='printf %s'
else
  if test "X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`" = "X-n $as_echo"; then
    as_echo_body='eval /usr/ucb/echo -n "$1$as_nl"'
    as_echo_n='/usr/ucb/echo -n'
  else
    as_echo_body='eval expr "X$1" : "X\\(.*\\)"'
    as_echo_n_body='eval
      arg=$1;
      case $arg in
      *"$as_nl"*)
	expr "X$arg" : "X\\(.*\\)$as_nl";
	arg=`expr "X$arg" : ".*$as_nl\\(.*\\)"`;;
      esac;
      expr "X$arg" : "X\\(.*\\)" | tr -d "$as_nl"
    '
    export as_echo_n_body
    as_echo_n='sh -c $as_echo_n_body as_echo'
  fi
  export as_echo_body
  as_echo='sh -c $as_echo_body as_echo'
fi

# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
      PATH_SEPARATOR=';'
  }
fi

# Support unset when possible.
if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then
  as_unset=unset
else
  as_unset=false
fi


# IFS
# We need space, tab and new line, in precisely that order.  Quoting is
# there to prevent editors from complaining about space-tab.
# (If _AS_PATH_WALK were called with IFS unset, it would disable word
# splitting by setting IFS to empty value.)
IFS=" ""	$as_nl"

# Find who we are.  Look in the path if we contain no directory separator.
case $0 in
  *[\\/]* ) as_myself=$0 ;;
  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
done
IFS=$as_save_IFS

     ;;
esac
# We did not find ourselves, most probably we were run as `sh COMMAND'
# in which case we are not to be found in the path.
if test "x$as_myself" = x; then
  as_myself=$0
fi
if test ! -f "$as_myself"; then
  $as_echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
  { (exit 1); exit 1; }
fi

# Work around bugs in pre-3.0 UWIN ksh.
for as_var in ENV MAIL MAILPATH
do ($as_unset $as_var) >/dev/null 2>&1 && $as_unset $as_var
done
PS1='$ '
PS2='> '
PS4='+ '

# NLS nuisances.
LC_ALL=C
export LC_ALL
LANGUAGE=C
export LANGUAGE

# Required to use basename.
if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi

if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi


# Name of the executable.
as_me=`$as_basename -- "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`

# CDPATH.
$as_unset CDPATH


if test "x$CONFIG_SHELL" = x; then
  if (eval ":") 2>/dev/null; then
  as_have_required=yes
else
  as_have_required=no
fi

  if test $as_have_required = yes &&	 (eval ":
(as_func_return () {
  (exit \$1)
}
as_func_success () {
  as_func_return 0
}
as_func_failure () {
  as_func_return 1
}
as_func_ret_success () {
  return 0
}
as_func_ret_failure () {
  return 1
}

exitcode=0
if as_func_success; then
  :
else
  exitcode=1
  echo as_func_success failed.
fi

if as_func_failure; then
  exitcode=1
  echo as_func_failure succeeded.
fi

if as_func_ret_success; then
  :
else
  exitcode=1
  echo as_func_ret_success failed.
fi

if as_func_ret_failure; then
  exitcode=1
  echo as_func_ret_failure succeeded.
fi

if ( set x; as_func_ret_success y && test x = \"\$1\" ); then
  :
else
  exitcode=1
  echo positional parameters were not saved.
fi

test \$exitcode = 0) || { (exit 1); exit 1; }

(
  as_lineno_1=\$LINENO
  as_lineno_2=\$LINENO
  test \"x\$as_lineno_1\" != \"x\$as_lineno_2\" &&
  test \"x\`expr \$as_lineno_1 + 1\`\" = \"x\$as_lineno_2\") || { (exit 1); exit 1; }
") 2> /dev/null; then
  :
else
  as_candidate_shells=
    as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in /bin$PATH_SEPARATOR/usr/bin$PATH_SEPARATOR$PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  case $as_dir in
	 /*)
	   for as_base in sh bash ksh sh5; do
	     as_candidate_shells="$as_candidate_shells $as_dir/$as_base"
	   done;;
       esac
done
IFS=$as_save_IFS


      for as_shell in $as_candidate_shells $SHELL; do
	 # Try only shells that exist, to save several forks.
	 if { test -f "$as_shell" || test -f "$as_shell.exe"; } &&
		{ ("$as_shell") 2> /dev/null <<\_ASEOF
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else
  case `(set -o) 2>/dev/null` in
  *posix*) set -o posix ;;
esac

fi


:
_ASEOF
}; then
  CONFIG_SHELL=$as_shell
	       as_have_required=yes
	       if { "$as_shell" 2> /dev/null <<\_ASEOF
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else
  case `(set -o) 2>/dev/null` in
  *posix*) set -o posix ;;
esac

fi


:
(as_func_return () {
  (exit $1)
}
as_func_success () {
  as_func_return 0
}
as_func_failure () {
  as_func_return 1
}
as_func_ret_success () {
  return 0
}
as_func_ret_failure () {
  return 1
}

exitcode=0
if as_func_success; then
  :
else
  exitcode=1
  echo as_func_success failed.
fi

if as_func_failure; then
  exitcode=1
  echo as_func_failure succeeded.
fi

if as_func_ret_success; then
  :
else
  exitcode=1
  echo as_func_ret_success failed.
fi

if as_func_ret_failure; then
  exitcode=1
  echo as_func_ret_failure succeeded.
fi

if ( set x; as_func_ret_success y && test x = "$1" ); then
  :
else
  exitcode=1
  echo positional parameters were not saved.
fi

test $exitcode = 0) || { (exit 1); exit 1; }

(
  as_lineno_1=$LINENO
  as_lineno_2=$LINENO
  test "x$as_lineno_1" != "x$as_lineno_2" &&
  test "x`expr $as_lineno_1 + 1`" = "x$as_lineno_2") || { (exit 1); exit 1; }

_ASEOF
}; then
  break
fi

fi

      done

      if test "x$CONFIG_SHELL" != x; then
  for as_var in BASH_ENV ENV
	do ($as_unset $as_var) >/dev/null 2>&1 && $as_unset $as_var
	done
	export CONFIG_SHELL
	exec "$CONFIG_SHELL" "$as_myself" ${1+"$@"}
fi


    if test $as_have_required = no; then
  echo This script requires a shell more modern than all the
      echo shells that I found on your system.  Please install a
      echo modern shell, or manually run the script under such a
      echo shell if you do have one.
      { (exit 1); exit 1; }
fi


fi

fi



(eval "as_func_return () {
  (exit \$1)
}
as_func_success () {
  as_func_return 0
}
as_func_failure () {
  as_func_return 1
}
as_func_ret_success () {
  return 0
}
as_func_ret_failure () {
  return 1
}

exitcode=0
if as_func_success; then
  :
else
  exitcode=1
  echo as_func_success failed.
fi

if as_func_failure; then
  exitcode=1
  echo as_func_failure succeeded.
fi

if as_func_ret_success; then
  :
else
  exitcode=1
  echo as_func_ret_success failed.
fi

if as_func_ret_failure; then
  exitcode=1
  echo as_func_ret_failure succeeded.
fi

if ( set x; as_func_ret_success y && test x = \"\$1\" ); then
  :
else
  exitcode=1
  echo positional parameters were not saved.
fi

test \$exitcode = 0") || {
  echo No shell found that supports shell functions.
  echo Please tell bug-autoconf@gnu.org about your system,
  echo including any error possibly output before this message.
  echo This can help us improve future autoconf versions.
  echo Configuration will now proceed without shell functions.
}



  as_lineno_1=$LINENO
  as_lineno_2=$LINENO
  test "x$as_lineno_1" != "x$as_lineno_2" &&
  test "x`expr $as_lineno_1 + 1`" = "x$as_lineno_2" || {

  # Create $as_me.lineno as a copy of $as_myself, but with $LINENO
  # uniformly replaced by the line number.  The first 'sed' inserts a
  # line-number line after each line using $LINENO; the second 'sed'
  # does the real work.  The second script uses 'N' to pair each
  # line-number line with the line containing $LINENO, and appends
  # trailing '-' during substitution so that $LINENO is not a special
  # case at line end.
  # (Raja R Harinath suggested sed '=', and Paul Eggert wrote the
  # scripts with optimization help from Paolo Bonzini.  Blame Lee
  # E. McMahon (1931-1989) for sed's syntax.  :-)
  sed -n '
    p
    /[$]LINENO/=
  ' <$as_myself |
    sed '
      s/[$]LINENO.*/&-/
      t lineno
      b
      :lineno
      N
      :loop
      s/[$]LINENO\([^'$as_cr_alnum'_].*\n\)\(.*\)/\2\1\2/
      t loop
      s/-\n.*//
    ' >$as_me.lineno &&
  chmod +x "$as_me.lineno" ||
    { { $as_echo "$as_me:$LINENO: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&5
$as_echo "$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&2;}
   { (exit 1); exit 1; }; }

  # Don't try to exec as it changes $[0], causing all sort of problems
  # (the dirname of $[0] is not the place where we might find the
  # original and so on.  Autoconf is especially sensitive to this).
  . "./$as_me.lineno"
  # Exit status is that of the last command.
  exit
}


if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
  as_dirname=dirname
else
  as_dirname=false
fi

ECHO_C= ECHO_N= ECHO_T=
case `echo -n x` in
-n*)
  case `echo 'x\c'` in
  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
  *)   ECHO_C='\c';;
  esac;;
*)
  ECHO_N='-n';;
esac
if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi

rm -f conf$$ conf$$.exe conf$$.file
if test -d conf$$.dir; then
  rm -f conf$$.dir/conf$$.file
else
  rm -f conf$$.dir
  mkdir conf$$.dir 2>/dev/null
fi
if (echo >conf$$.file) 2>/dev/null; then
  if ln -s conf$$.file conf$$ 2>/dev/null; then
    as_ln_s='ln -s'
    # ... but there are two gotchas:
    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
    # In both cases, we have to default to `cp -p'.
    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
      as_ln_s='cp -p'
  elif ln conf$$.file conf$$ 2>/dev/null; then
    as_ln_s=ln
  else
    as_ln_s='cp -p'
  fi
else
  as_ln_s='cp -p'
fi
rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
rmdir conf$$.dir 2>/dev/null

if mkdir -p . 2>/dev/null; then
  as_mkdir_p=:
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi

if test -x / >/dev/null 2>&1; then
  as_test_x='test -x'
else
  if ls -dL / >/dev/null 2>&1; then
    as_ls_L_option=L
  else
    as_ls_L_option=
  fi
  as_test_x='
    eval sh -c '\''
      if test -d "$1"; then
	test -d "$1/.";
      else
	case $1 in
	-*)set "./$1";;
	esac;
	case `ls -ld'$as_ls_L_option' "$1" 2>/dev/null` in
	???[sx]*):;;*)false;;esac;fi
    '\'' sh
  '
fi
as_executable_p=$as_test_x

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"





SHELL=${CONFIG_SHELL-/bin/sh}

# How were we run?
at_cli_args="$@"


# Not all shells have the 'times' builtin; the subshell is needed to make
# sure we discard the 'times: not found' message from the shell.
at_times_p=false
(times) >/dev/null 2>&1 && at_times_p=:

# CLI Arguments to pass to the debugging scripts.
at_debug_args=
# -e sets to true
at_errexit_p=false
# Shall we be verbose?  ':' means no, empty means yes.
at_verbose=:
at_quiet=

# Shall we keep the debug scripts?  Must be `:' when the suite is
# run by a debug script, so that the script doesn't remove itself.
at_debug_p=false
# Display help message?
at_help_p=false
# Display the version message?
at_version_p=false
# List test groups?
at_list_p=false
# --clean
at_clean=false
# Test groups to run
at_groups=
# Whether a write failure occurred
at_write_fail=0

# The directory we run the suite in.  Default to . if no -C option.
at_dir=`pwd`
# An absolute reference to this testsuite script.
case $as_myself in
  [\\/]* | ?:[\\/]* ) at_myself=$as_myself ;;
  * ) at_myself=$at_dir/$as_myself ;;
esac
# Whether -C is in effect.
at_change_dir=false

# List of the tested programs.
at_tested=''
# List of the all the test groups.
at_groups_all=' 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71'
# As many question marks as there are digits in the last test group number.
# Used to normalize the test group numbers so that `ls' lists them in
# numerical order.
at_format='??'
# Description of all the test groups.
at_help_all="1;testsuite.at:63;version;;
2;testsuite.at:86;namescheme;;
3;testsuite.at:89;point;;
4;testsuite.at:92;extface;;
5;testsuite.at:95;testall -small;;
6;testsuite.at:98;TestReadMask;;
7;testsuite.at:104;array;;
8;testsuite.at:107;multi_test testread;;
9;testsuite.at:110;multi_test earlyclose;;
10;testsuite.at:113;partial_io;;
11;testsuite.at:116;simple;;
12;testsuite.at:119;ucd;;
13;testsuite.at:122;ucdsamp3;;
14;testsuite.at:125;testall -small -fortran;;
15;testsuite.at:128;obj;;
16;testsuite.at:131;onehex;;
17;testsuite.at:134;oneprism;;
18;testsuite.at:137;onepyramid;;
19;testsuite.at:140;onetet;;
20;testsuite.at:143;subhex;;
21;testsuite.at:146;twohex;;
22;testsuite.at:149;multispec;;
23;testsuite.at:152;sami;;
24;testsuite.at:155;specmix;;
25;testsuite.at:158;spec;;
26;testsuite.at:161;group_test;;
27;testsuite.at:164;listtypes;;
28;testsuite.at:168;alltypes;;
29;testsuite.at:171;wave;;
30;testsuite.at:174;polyzl;;
31;testsuite.at:177;csg;;
32;testsuite.at:180;rocket;;
33;testsuite.at:183;mmadjacency;;
34;testsuite.at:186;mat3d_3across;;
35;testsuite.at:189;ucd1d;;
36;testsuite.at:192;dir;;
37;testsuite.at:195;quad;;
38;testsuite.at:198;arbpoly2d;;
39;testsuite.at:201;readstuff;;
40;testsuite.at:205;testfs;;
41;testsuite.at:208;empty;;
42;testsuite.at:213;read;python;
43;testsuite.at:218;write;python;
44;testsuite.at:233;error handling;python;
45;testsuite.at:238;write objects;python;
46;testsuite.at:244;testpdb;;
47;testsuite.at:247;pdbtst;;
48;testsuite.at:252;grab;;
49;testsuite.at:255;compression gzip;compression;
50;testsuite.at:260;compression szip;compression;
51;testsuite.at:265;compression fpzip;compression;
52;testsuite.at:270;compression lossy3;compression;
53;testsuite.at:275;compression minratio1000;compression;
54;testsuite.at:279;testhzip;compression;
55;testsuite.at:283;checksums;;
56;testsuite.at:286;xversion;;
57;testsuite.at:289;largefile;large;
58;testsuite.at:295;arrayf77;fortran;
59;testsuite.at:299;curvef77;fortran;
60;testsuite.at:303;matf77;fortran;
61;testsuite.at:307;pointf77;fortran;
62;testsuite.at:311;quadf77;fortran;
63;testsuite.at:315;testallf77;fortran;
64;testsuite.at:319;ucdf77;fortran;
65;testsuite.at:323;csgmesh;fortran;
66;testsuite.at:329;silock;tools;
67;testsuite.at:333;force single;conversions;
68;testsuite.at:338;multi_file;large;
69;testsuite.at:342;multi_file use-ns;large;
70;testsuite.at:346;testall -medium;large;
71;testsuite.at:350;testall -large;large;
"

# at_func_validate_ranges [NAME...]
# ---------------------------------
# Validate and normalize the test group number contained in each
# variable NAME.  Leading zeroes are treated as decimal.
at_func_validate_ranges ()
{
  for at_grp
  do
    eval at_value=\$$at_grp
    if test $at_value -lt 1 || test $at_value -gt 71; then
      $as_echo "invalid test group: $at_value" >&2
      exit 1
    fi
    case $at_value in
      0*) # We want to treat leading 0 as decimal, like expr and test, but
	  # at_func_arith treats it as octal if it uses $(( )).
	  # With XSI shells, ${at_value#${at_value%%[1-9]*}} avoids the
	  # expr fork, but it is not worth the effort to determine if the
	  # shell supports XSI when the user can just avoid leading 0.
	  eval $at_grp='`expr $at_value + 0`' ;;
    esac
  done
}

at_prev=
for at_option
do
  # If the previous option needs an argument, assign it.
  if test -n "$at_prev"; then
    at_option=$at_prev=$at_option
    at_prev=
  fi

  case $at_option in
  *=*) at_optarg=`expr "x$at_option" : 'x[^=]*=\(.*\)'` ;;
  *)   at_optarg= ;;
  esac

  # Accept the important Cygnus configure options, so we can diagnose typos.

  case $at_option in
    --help | -h )
	at_help_p=:
	;;

    --list | -l )
	at_list_p=:
	;;

    --version | -V )
	at_version_p=:
	;;

    --clean | -c )
	at_clean=:
	;;

    --debug | -d )
	at_debug_p=:
	;;

    --errexit | -e )
	at_debug_p=:
	at_errexit_p=:
	;;

    --verbose | -v )
	at_verbose=; at_quiet=:
	;;

    --trace | -x )
	at_traceon='set -x'; at_traceoff='set +x'
	;;

    [0-9] | [0-9][0-9] | [0-9][0-9][0-9] | [0-9][0-9][0-9][0-9])
	at_func_validate_ranges at_option
	at_groups="$at_groups$at_option "
	;;

    # Ranges
    [0-9]- | [0-9][0-9]- | [0-9][0-9][0-9]- | [0-9][0-9][0-9][0-9]-)
	at_range_start=`echo $at_option |tr -d X-`
	at_func_validate_ranges at_range_start
	at_range=`$as_echo " $at_groups_all " | \
	  sed -e 's/^.* \('$at_range_start' \)/\1/'`
	at_groups="$at_groups$at_range "
	;;

    -[0-9] | -[0-9][0-9] | -[0-9][0-9][0-9] | -[0-9][0-9][0-9][0-9])
	at_range_end=`echo $at_option |tr -d X-`
	at_func_validate_ranges at_range_end
	at_range=`$as_echo " $at_groups_all " | \
	  sed -e 's/\( '$at_range_end'\) .*$/\1/'`
	at_groups="$at_groups$at_range "
	;;

    [0-9]-[0-9] | [0-9]-[0-9][0-9] | [0-9]-[0-9][0-9][0-9] | \
    [0-9]-[0-9][0-9][0-9][0-9] | [0-9][0-9]-[0-9][0-9] | \
    [0-9][0-9]-[0-9][0-9][0-9] | [0-9][0-9]-[0-9][0-9][0-9][0-9] | \
    [0-9][0-9][0-9]-[0-9][0-9][0-9] | \
    [0-9][0-9][0-9]-[0-9][0-9][0-9][0-9] | \
    [0-9][0-9][0-9][0-9]-[0-9][0-9][0-9][0-9] )
	at_range_start=`expr $at_option : '\(.*\)-'`
	at_range_end=`expr $at_option : '.*-\(.*\)'`
	if test $at_range_start -gt $at_range_end; then
	  at_tmp=$at_range_end
	  at_range_end=$at_range_start
	  at_range_start=$at_tmp
	fi
	at_func_validate_ranges at_range_start at_range_end
	at_range=`$as_echo " $at_groups_all " | \
	  sed -e 's/^.*\( '$at_range_start' \)/\1/' \
	      -e 's/\( '$at_range_end'\) .*$/\1/'`
	at_groups="$at_groups$at_range "
	;;

    # Directory selection.
    --directory | -C )
	at_prev=--directory
	;;
    --directory=* )
	at_change_dir=:
	at_dir=$at_optarg
	;;

    # Keywords.
    --keywords | -k )
	at_prev=--keywords
	;;
    --keywords=* )
	at_groups_selected=$at_help_all
	at_save_IFS=$IFS
	IFS=,
	set X $at_optarg
	shift
	IFS=$at_save_IFS
	for at_keyword
	do
	  at_invert=
	  case $at_keyword in
	  '!'*)
	    at_invert="-v"
	    at_keyword=`expr "X$at_keyword" : 'X!\(.*\)'`
	    ;;
	  esac
	  # It is on purpose that we match the test group titles too.
	  at_groups_selected=`$as_echo "$at_groups_selected" |
	      grep -i $at_invert "^[1-9][^;]*;.*[; ]$at_keyword[ ;]"`
	done
	# Smash the newlines.
	at_groups_selected=`$as_echo "$at_groups_selected" | sed 's/;.*//' |
	  tr "$as_nl" ' '
	`
	at_groups="$at_groups$at_groups_selected "
	;;

    *=*)
	at_envvar=`expr "x$at_option" : 'x\([^=]*\)='`
	# Reject names that are not valid shell variable names.
	case $at_envvar in
	  '' | [0-9]* | *[!_$as_cr_alnum]* )
	    { { $as_echo "$as_me:$LINENO: error: invalid variable name: $at_envvar" >&5
$as_echo "$as_me: error: invalid variable name: $at_envvar" >&2;}
   { (exit 1); exit 1; }; } ;;
	esac
	at_value=`$as_echo "$at_optarg" | sed "s/'/'\\\\\\\\''/g"`
	# Export now, but save eval for later and for debug scripts.
	export $at_envvar
	at_debug_args="$at_debug_args $at_envvar='$at_value'"
	;;

     *) $as_echo "$as_me: invalid option: $at_option" >&2
	$as_echo "Try \`$0 --help' for more information." >&2
	exit 1
	;;
  esac
done

# Verify our last option didn't require an argument
if test -n "$at_prev"; then
  { { $as_echo "$as_me:$LINENO: error: \`$at_prev' requires an argument." >&5
$as_echo "$as_me: error: \`$at_prev' requires an argument." >&2;}
   { (exit 1); exit 1; }; }
fi


# Selected test groups.
if test -z "$at_groups"; then
  at_groups=$at_groups_all
else
  # Sort the tests, removing duplicates.
  at_groups=`$as_echo "$at_groups" | tr ' ' "$as_nl" | sort -nu`
fi

# Help message.
if $at_help_p; then
  cat <<_ATEOF || at_write_fail=1
Usage: $0 [OPTION]... [VARIABLE=VALUE]... [TESTS]

Run all the tests, or the selected TESTS, given by numeric ranges, and
save a detailed log file.  Upon failure, create debugging scripts.

You should not change environment variables unless explicitly passed
as command line arguments.  Set \`AUTOTEST_PATH' to select the executables
to exercise.  Each relative directory is expanded as build and source
directories relatively to the top level of this distribution.  E.g.,

  $ $0 AUTOTEST_PATH=bin

possibly amounts into

  PATH=/tmp/foo-1.0/bin:/src/foo-1.0/bin:\$PATH
_ATEOF
cat <<_ATEOF || at_write_fail=1

Operation modes:
  -h, --help     print the help message, then exit
  -V, --version  print version number, then exit
  -c, --clean    remove all the files this test suite might create and exit
  -l, --list     describes all the tests, or the selected TESTS
_ATEOF
cat <<_ATEOF || at_write_fail=1

Execution tuning:
  -C, --directory=DIR
                 change to directory DIR before starting
  -k, --keywords=KEYWORDS
                 select the tests matching all the comma-separated KEYWORDS
                 multiple \`-k' accumulate; prefixed \`!' negates a KEYWORD
  -e, --errexit  abort as soon as a test fails; implies --debug
  -v, --verbose  force more detailed output
                 default for debugging scripts
  -d, --debug    inhibit clean up and top-level logging
                 default for debugging scripts
  -x, --trace    enable tests shell tracing
_ATEOF
cat <<_ATEOF || at_write_fail=1

Report bugs to <visit-users@email.ornl.gov>.
_ATEOF
  exit $at_write_fail
fi

# List of tests.
if $at_list_p; then
  cat <<_ATEOF || at_write_fail=1
silo 4.9 test suite: VALGRIND="$VALGRIND" STARGS="$STARGS" test groups:

 NUM: FILE-NAME:LINE     TEST-GROUP-NAME
      KEYWORDS

_ATEOF
  # Passing at_groups is tricky.  We cannot use it to form a literal string
  # or regexp because of the limitation of AIX awk.  And Solaris' awk
  # doesn't grok more than 99 fields in a record, so we have to use `split'.
  # at_groups needs to be space-separated for this script to work.
  case $at_groups in
    *"$as_nl"* )
      at_groups=`$as_echo "$at_groups" | tr "$as_nl" ' '` ;;
  esac
  $as_echo "$at_groups$as_nl$at_help_all" |
    awk 'BEGIN { FS = ";" }
	 NR == 1 {
	   for (n = split($ 0, a, " "); n; n--) selected[a[n]] = 1
	   next
	 }
	 {
	   if (selected[$ 1]) {
	     printf " %3d: %-18s %s\n", $ 1, $ 2, $ 3
	     if ($ 4) printf "      %s\n", $ 4
	   }
	 }' || at_write_fail=1
  exit $at_write_fail
fi
if $at_version_p; then
  $as_echo "$as_me (silo 4.9)" &&
  cat <<\_ACEOF || at_write_fail=1

Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008
Free Software Foundation, Inc.
This test suite is free software; the Free Software Foundation gives
unlimited permission to copy, distribute and modify it.

This work was performed under the auspices of
the U.S. Department of Energy by
Lawrence Livermore National Laboratory
in part under Contract W-7405-Eng-48 and
in part under Contract DE-AC52-07NA27344.
_ACEOF
  exit $at_write_fail
fi

# Should we print banners?  at_groups is space-separated for entire test,
# newline-separated if only a subset of the testsuite is run.
case $at_groups in
  *' '*' '* | *"$as_nl"*"$as_nl"* )
      at_print_banners=: ;;
  * ) at_print_banners=false ;;
esac
# Text for banner N, set to empty once printed.
# Banner 1. testsuite.at:62
# Category starts at test group 1.
at_banner_text_1="Non-driver-specific"
# Banner 2. testsuite.at:212
# Category starts at test group 42.
at_banner_text_2="pythonmodule"
# Banner 3. testsuite.at:243
# Category starts at test group 46.
at_banner_text_3="PDB Lite"
# Banner 4. testsuite.at:251
# Category starts at test group 48.
at_banner_text_4="HDF5 Driver Specific"
# Banner 5. testsuite.at:294
# Category starts at test group 58.
at_banner_text_5="Fortran"
# Banner 6. testsuite.at:328
# Category starts at test group 66.
at_banner_text_6="Special"

# Take any -C into account.
if $at_change_dir ; then
  if test x- = "x$at_dir" ; then
    at_dir=./-
  fi
  test x != "x$at_dir" && cd "$at_dir" \
    || { { $as_echo "$as_me:$LINENO: error: unable to change directory" >&5
$as_echo "$as_me: error: unable to change directory" >&2;}
   { (exit 1); exit 1; }; }
  at_dir=`pwd`
fi

# Load the config files for any default variable assignments.
for at_file in atconfig atlocal
do
  test -r $at_file || continue
  . ./$at_file || { { $as_echo "$as_me:$LINENO: error: invalid content: $at_file" >&5
$as_echo "$as_me: error: invalid content: $at_file" >&2;}
   { (exit 1); exit 1; }; }
done

# Autoconf <=2.59b set at_top_builddir instead of at_top_build_prefix:
: ${at_top_build_prefix=$at_top_builddir}

# Perform any assignments requested during argument parsing.
eval "$at_debug_args"

# atconfig delivers names relative to the directory the test suite is
# in, but the groups themselves are run in testsuite-dir/group-dir.
if test -n "$at_top_srcdir"; then
  builddir=../..
  for at_dir_var in srcdir top_srcdir top_build_prefix
  do
    at_val=`eval 'as_val=${'at_$at_dir_var'}
		 $as_echo "$as_val"'`
    case $at_val in
      [\\/$]* | ?:[\\/]* ) at_prefix= ;;
      *) at_prefix=../../ ;;
    esac
    eval "$at_dir_var=\$at_prefix\$at_val"
  done
fi

## ------------------- ##
## Directory structure ##
## ------------------- ##

# This is the set of directories and files used by this script
# (non-literals are capitalized):
#
# TESTSUITE         - the testsuite
# TESTSUITE.log     - summarizes the complete testsuite run
# TESTSUITE.dir/    - created during a run, remains after -d or failed test
# + at-groups/      - during a run: status of all groups in run
# | + NNN/          - during a run: meta-data about test group NNN
# | | + check-line  - location (source file and line) of current AT_CHECK
# | | + status      - exit status of current AT_CHECK
# | | + stdout      - stdout of current AT_CHECK
# | | + stder1      - stderr, including trace
# | | + stderr      - stderr, with trace filtered out
# | | + test-source - portion of testsuite that defines group
# | | + times       - timestamps for computing duration
# | | + pass        - created if group passed
# | | + xpass       - created if group xpassed
# | | + fail        - created if group failed
# | | + xfail       - created if group xfailed
# | | + skip        - created if group skipped
# + at-stop         - during a run: end the run if this file exists
# + at-source-lines - during a run: cache of TESTSUITE line numbers for extraction
# + 0..NNN/         - created for each group NNN, remains after -d or failed test
# | + TESTSUITE.log - summarizes the group results
# | + ...           - files created during the group

# The directory the whole suite works in.
# Should be absolute to let the user `cd' at will.
at_suite_dir=$at_dir/$as_me.dir
# The file containing the suite.
at_suite_log=$at_dir/$as_me.log
# The directory containing helper files per test group.
at_helper_dir=$at_suite_dir/at-groups
# Stop file: if it exists, do not start new jobs.
at_stop_file=$at_suite_dir/at-stop

if $at_clean; then
  test -d "$at_suite_dir" &&
    find "$at_suite_dir" -type d ! -perm -700 -exec chmod u+rwx \{\} \;
  rm -f -r "$at_suite_dir" "$at_suite_log"
  exit $?
fi

# Don't take risks: use only absolute directories in PATH.
#
# For stand-alone test suites (ie. atconfig was not found),
# AUTOTEST_PATH is relative to `.'.
#
# For embedded test suites, AUTOTEST_PATH is relative to the top level
# of the package.  Then expand it into build/src parts, since users
# may create executables in both places.
AUTOTEST_PATH=`$as_echo "$AUTOTEST_PATH" | sed "s|:|$PATH_SEPARATOR|g"`
at_path=
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $AUTOTEST_PATH $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  test -n "$at_path" && at_path=$at_path$PATH_SEPARATOR
case $as_dir in
  [\\/]* | ?:[\\/]* )
    at_path=$at_path$as_dir
    ;;
  * )
    if test -z "$at_top_build_prefix"; then
      # Stand-alone test suite.
      at_path=$at_path$as_dir
    else
      # Embedded test suite.
      at_path=$at_path$at_top_build_prefix$as_dir$PATH_SEPARATOR
      at_path=$at_path$at_top_srcdir/$as_dir
    fi
    ;;
esac
done
IFS=$as_save_IFS


# Now build and simplify PATH.
#
# There might be directories that don't exist, but don't redirect
# builtins' (eg., cd) stderr directly: Ultrix's sh hates that.
at_new_path=
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $at_path
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  test -d "$as_dir" || continue
case $as_dir in
  [\\/]* | ?:[\\/]* ) ;;
  * ) as_dir=`(cd "$as_dir" && pwd) 2>/dev/null` ;;
esac
case $PATH_SEPARATOR$at_new_path$PATH_SEPARATOR in
  *$PATH_SEPARATOR$as_dir$PATH_SEPARATOR*) ;;
  $PATH_SEPARATOR$PATH_SEPARATOR) at_new_path=$as_dir ;;
  *) at_new_path=$at_new_path$PATH_SEPARATOR$as_dir ;;
esac
done
IFS=$as_save_IFS

PATH=$at_new_path
export PATH

# Setting up the FDs.
# 5 is the log file.  Not to be overwritten if `-d'.
if $at_debug_p; then
  at_suite_log=/dev/null
else
  : >"$at_suite_log"
fi
exec 5>>"$at_suite_log"

# Banners and logs.
sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## silo 4.9 test suite: VALGRIND="$VALGRIND" STARGS="$STARGS". ##
_ASBOX
{
  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## silo 4.9 test suite: VALGRIND="$VALGRIND" STARGS="$STARGS". ##
_ASBOX
  echo

  $as_echo "$as_me: command line was:"
  $as_echo "  \$ $0 $at_cli_args"
  echo

  # Try to find a few ChangeLogs in case it might help determining the
  # exact version.  Use the relative dir: if the top dir is a symlink,
  # find will not follow it (and options to follow the links are not
  # portable), which would result in no output here.  Prune directories
  # matching the package tarname, since they tend to be leftovers from
  # `make dist' or `make distcheck' and contain redundant or stale logs.
  if test -n "$at_top_srcdir"; then
    cat <<\_ASBOX
## ----------- ##
## ChangeLogs. ##
## ----------- ##
_ASBOX
    echo
    for at_file in `find "$at_top_srcdir" -name "silo-*" -prune -o -name ChangeLog -print`
    do
      $as_echo "$as_me: $at_file:"
      sed 's/^/| /;10q' $at_file
      echo
    done

  fi

  {
cat <<_ASUNAME
## --------- ##
## Platform. ##
## --------- ##

hostname = `(hostname || uname -n) 2>/dev/null | sed 1q`
uname -m = `(uname -m) 2>/dev/null || echo unknown`
uname -r = `(uname -r) 2>/dev/null || echo unknown`
uname -s = `(uname -s) 2>/dev/null || echo unknown`
uname -v = `(uname -v) 2>/dev/null || echo unknown`

/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null || echo unknown`
/bin/uname -X     = `(/bin/uname -X) 2>/dev/null     || echo unknown`

/bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`
/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`
/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`
/usr/bin/hostinfo      = `(/usr/bin/hostinfo) 2>/dev/null      || echo unknown`
/bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`
/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`
/bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`

_ASUNAME

as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  $as_echo "PATH: $as_dir"
done
IFS=$as_save_IFS

}
  echo

  # Contents of the config files.
  for at_file in atconfig atlocal
  do
    test -r $at_file || continue
    $as_echo "$as_me: $at_file:"
    sed 's/^/| /' $at_file
    echo
  done
} >&5


## --------------- ##
## Shell functions ##
## --------------- ##

# at_func_banner NUMBER
# ---------------------
# Output banner NUMBER, provided the testsuite is running multiple groups
# and this particular banner has not yet been printed.
at_func_banner ()
{
  $at_print_banners || return 0
  eval at_banner_text=\$at_banner_text_$1
  test "x$at_banner_text" = x && return 0
  eval at_banner_text_$1=
  $as_echo "$as_nl$at_banner_text$as_nl"
} # at_func_banner

# at_func_check_newline COMMAND
# -----------------------------
# Test if COMMAND includes a newline and, if so, print a message and return
# exit code 1
at_func_check_newline ()
{
  case "$1" in
 *'
'*) echo 'Not enabling shell tracing (command contains an embedded newline)'
    return 1 ;;
 *) return 0 ;;
  esac
}

# at_func_filter_trace EXIT-CODE
# ------------------------------
# Split the contents of file "$at_stder1" into the "set -x" trace (on stderr)
# and the other lines (on file "$at_stderr").  Return the exit code EXIT-CODE.
at_func_filter_trace ()
{
  grep '^ *+' "$at_stder1" >&2
  grep -v '^ *+' "$at_stder1" >"$at_stderr"
  return $1
}

# at_func_log_failure FILE-LIST
# -----------------------------
# Copy the files in the list on stdout with a "> " prefix, and exit the shell
# with a failure exit code.
at_func_log_failure ()
{
  for file
    do $as_echo "$file:"; sed 's/^/> /' "$file"; done
  echo 1 > "$at_status_file"
  exit 1
}

# at_func_check_skip EXIT-CODE
# ----------------------------
# Check whether EXIT-CODE is the special exit code 77, and if so exit the shell
# with that same exit code.
at_func_check_skip ()
{
  case $1 in
    77) echo 77 > "$at_status_file"; exit 77;;
  esac
}

# at_func_check_status EXPECTED EXIT-CODE LINE
# --------------------------------------------
# Check whether EXIT-CODE is the expected exit code, and if so do nothing.
# Otherwise, if it is 77 exit the shell with that same exit code; if it is
# anything else print an error message and fail the test.
at_func_check_status ()
{
  case $2 in
    $1 ) ;;
    77) echo 77 > "$at_status_file"; exit 77;;
    *) $as_echo "$3: exit code was $2, expected $1"
      at_failed=:;;
  esac
}

# at_func_diff_devnull FILE
# -------------------------
# Emit a diff between /dev/null and FILE.  Uses "test -s" to avoid useless
# diff invocations.
at_func_diff_devnull ()
{
  test -s "$1" || return 0
  $at_diff "$at_devnull" "$1"
}

# at_func_test NUMBER
# -------------------
# Parse out test NUMBER from the tail of this file.
at_func_test ()
{
  eval at_sed=\$at_sed$1
  sed "$at_sed" "$at_myself" > "$at_test_source"
}

# at_func_create_debugging_script
# -------------------------------
# Create the debugging script $at_group_dir/run which will reproduce the
# current test group.
at_func_create_debugging_script ()
{
  {
    echo "#! /bin/sh" &&
    echo 'test "${ZSH_VERSION+set}" = set && alias -g '\''${1+"$@"}'\''='\''"$@"'\''' &&
    $as_echo "cd '$at_dir'" &&
    $as_echo "exec \${CONFIG_SHELL-$SHELL} \"$at_myself\" -v -d $at_debug_args $at_group \${1+\"\$@\"}" &&
    echo 'exit 1'
  } >"$at_group_dir/run" &&
  chmod +x "$at_group_dir/run"
}

# at_func_arith
# -------------
# Arithmetic evaluation, avoids expr if the shell is sane.  The
# interpretation of leading zeroes is unspecified.
#
# subshell and eval are needed to keep Solaris sh from bailing out:
if ( eval 'test $(( 1 + 1 )) = 2' ) 2>/dev/null; then
  # With "$@", bash does not split positional parameters:
  eval 'at_func_arith ()
  {
    at_func_arith_result=$(( $* ))
  }'
else
  at_func_arith ()
  {
    at_func_arith_result=`expr "$@"`
  }
fi

## ---------------------- ##
## End of shell functions ##
## ---------------------- ##
{
  cat <<\_ASBOX
## ---------------- ##
## Tested programs. ##
## ---------------- ##
_ASBOX
  echo
} >&5

# Report what programs are being tested.
for at_program in : $at_tested
do
  test "$at_program" = : && continue
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  test -f "$as_dir/$at_program" && break
done
IFS=$as_save_IFS

  if test -f "$as_dir/$at_program"; then
    {
      $as_echo "$at_srcdir/testsuite.at:55: $as_dir/$at_program --version"
      "$as_dir/$at_program" --version </dev/null
      echo
    } >&5 2>&1
  else
    { { $as_echo "$as_me:$LINENO: error: cannot find $at_program" >&5
$as_echo "$as_me: error: cannot find $at_program" >&2;}
   { (exit 1); exit 1; }; }
  fi
done

{
  cat <<\_ASBOX
## ------------------ ##
## Running the tests. ##
## ------------------ ##
_ASBOX
} >&5

at_start_date=`date`
at_start_time=`date +%s 2>/dev/null`
$as_echo "$as_me: starting at: $at_start_date" >&5

# Create the master directory if it doesn't already exist.
test -d "$at_suite_dir" ||
  mkdir "$at_suite_dir" ||
  { { $as_echo "$as_me:$LINENO: error: cannot create '$at_suite_dir'" >&5
$as_echo "$as_me: error: cannot create '$at_suite_dir'" >&2;}
   { (exit 1); exit 1; }; }

# Can we diff with `/dev/null'?  DU 5.0 refuses.
if diff /dev/null /dev/null >/dev/null 2>&1; then
  at_devnull=/dev/null
else
  at_devnull=$at_suite_dir/devnull
  >"$at_devnull"
fi

# Use `diff -u' when possible.
if at_diff=`diff -u "$at_devnull" "$at_devnull" 2>&1` && test -z "$at_diff"
then
  at_diff='diff -u'
else
  at_diff=diff
fi

# Get the last needed group.
for at_group in : $at_groups; do :; done

# Extract the start and end lines of each test group at the tail
# of this file
awk '
BEGIN { FS="" }
/^#AT_START_/ {
  start = NR
}
/^#AT_STOP_/ {
  test = substr ($ 0, 10)
  print "at_sed" test "=\"1," start "d;" (NR-1) "q\""
  if (test == "'"$at_group"'") exit
}' "$at_myself" > "$at_suite_dir/at-source-lines" &&
. "$at_suite_dir/at-source-lines" ||
  { { $as_echo "$as_me:$LINENO: error: cannot create test line number cache" >&5
$as_echo "$as_me: error: cannot create test line number cache" >&2;}
   { (exit 1); exit 1; }; }
rm -f "$at_suite_dir/at-source-lines"

# Set up helper dirs.
rm -rf "$at_helper_dir" &&
mkdir "$at_helper_dir" &&
cd "$at_helper_dir" &&
{ test -z "$at_groups" || mkdir $at_groups; } ||
{ { $as_echo "$as_me:$LINENO: error: testsuite directory setup failed" >&5
$as_echo "$as_me: error: testsuite directory setup failed" >&2;}
   { (exit 1); exit 1; }; }

# Functions for running a test group.  We leave the actual
# test group execution outside of a shell function in order
# to avoid hitting zsh 4.x exit status bugs.

# at_func_group_prepare
# ---------------------
# Prepare running a test group
at_func_group_prepare ()
{
  # The directory for additional per-group helper files.
  at_job_dir=$at_helper_dir/$at_group
  # The file containing the location of the last AT_CHECK.
  at_check_line_file=$at_job_dir/check-line
  # The file containing the exit status of the last command.
  at_status_file=$at_job_dir/status
  # The files containing the output of the tested commands.
  at_stdout=$at_job_dir/stdout
  at_stder1=$at_job_dir/stder1
  at_stderr=$at_job_dir/stderr
  # The file containing the code for a test group.
  at_test_source=$at_job_dir/test-source
  # The file containing dates.
  at_times_file=$at_job_dir/times

  # Be sure to come back to the top test directory.
  cd "$at_suite_dir"

  # Clearly separate the test groups when verbose.
  $at_first || $at_verbose echo

  at_group_normalized=$at_group

  eval 'while :; do
    case $at_group_normalized in #(
    '"$at_format"'*) break;;
    esac
    at_group_normalized=0$at_group_normalized
  done'


  # Create a fresh directory for the next test group, and enter.
  at_group_dir=$at_suite_dir/$at_group_normalized
  at_group_log=$at_group_dir/$as_me.log
  if test -d "$at_group_dir"; then
    find "$at_group_dir" -type d ! -perm -700 -exec chmod u+rwx \{\} \;
    rm -fr "$at_group_dir" ||
    { $as_echo "$as_me:$LINENO: WARNING: test directory for $at_group_normalized could not be cleaned." >&5
$as_echo "$as_me: WARNING: test directory for $at_group_normalized could not be cleaned." >&2;}
  fi
  # Be tolerant if the above `rm' was not able to remove the directory.
  { as_dir="$at_group_dir"
  case $as_dir in #(
  -*) as_dir=./$as_dir;;
  esac
  test -d "$as_dir" || { $as_mkdir_p && mkdir -p "$as_dir"; } || {
    as_dirs=
    while :; do
      case $as_dir in #(
      *\'*) as_qdir=`$as_echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
      *) as_qdir=$as_dir;;
      esac
      as_dirs="'$as_qdir' $as_dirs"
      as_dir=`$as_dirname -- "$as_dir" ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      test -d "$as_dir" && break
    done
    test -z "$as_dirs" || eval "mkdir $as_dirs"
  } || test -d "$as_dir" || { { $as_echo "$as_me:$LINENO: error: cannot create directory $as_dir" >&5
$as_echo "$as_me: error: cannot create directory $as_dir" >&2;}
   { (exit 1); exit 1; }; }; }

  echo 0 > "$at_status_file"

  # In verbose mode, append to the log file *and* show on
  # the standard output; in quiet mode only write to the log.
  if test -z "$at_verbose"; then
    at_tee_pipe='tee -a "$at_group_log"'
  else
    at_tee_pipe='cat >> "$at_group_log"'
  fi
}

# at_func_group_postprocess
# -------------------------
at_func_group_postprocess ()
{
  # Be sure to come back to the suite directory, in particular
  # since below we might `rm' the group directory we are in currently.
  cd "$at_suite_dir"

  if test ! -f "$at_check_line_file"; then
    sed "s/^ */$as_me: WARNING: /" <<_ATEOF
      A failure happened in a test group before any test could be
      run. This means that test suite is improperly designed.  Please
      report this failure to <visit-users@email.ornl.gov>.
_ATEOF
    $as_echo "$at_setup_line" >"$at_check_line_file"
  fi
  $at_verbose $as_echo_n "$at_group. $at_setup_line: "
  $as_echo_n "$at_group. $at_setup_line: " >> "$at_group_log"
  case $at_xfail:$at_status in
    yes:0)
	at_msg="UNEXPECTED PASS"
	at_res=xpass
	at_errexit=$at_errexit_p
	;;
    no:0)
	at_msg="ok"
	at_res=pass
	at_errexit=false
	;;
    *:77)
	at_msg='skipped ('`cat "$at_check_line_file"`')'
	at_res=skip
	at_errexit=false
	;;
    yes:*)
	at_msg='expected failure ('`cat "$at_check_line_file"`')'
	at_res=xfail
	at_errexit=false
	;;
    no:*)
	at_msg='FAILED ('`cat "$at_check_line_file"`')'
	at_res=fail
	at_errexit=$at_errexit_p
	;;
  esac
  echo "$at_res" > "$at_job_dir/$at_res"
  # Make sure there is a separator even with long titles.
  $as_echo " $at_msg"
  at_log_msg="$at_group. $at_desc ($at_setup_line): $at_msg"
  case $at_status in
    0|77)
      # $at_times_file is only available if the group succeeded.
      # We're not including the group log, so the success message
      # is written in the global log separately.  But we also
      # write to the group log in case they're using -d.
      if test -f "$at_times_file"; then
	at_log_msg="$at_log_msg     ("`sed 1d "$at_times_file"`')'
	rm -f "$at_times_file"
      fi
      $as_echo "$at_log_msg" >> "$at_group_log"
      $as_echo "$at_log_msg" >&5

      # Cleanup the group directory, unless the user wants the files.
      if $at_debug_p; then
	at_func_create_debugging_script
      else
	if test -d "$at_group_dir"; then
	  find "$at_group_dir" -type d ! -perm -700 -exec chmod u+rwx \{\} \;
	  rm -fr "$at_group_dir"
	fi
	rm -f "$at_test_source"
      fi
      ;;
    *)
      # Upon failure, include the log into the testsuite's global
      # log.  The failure message is written in the group log.  It
      # is later included in the global log.
      $as_echo "$at_log_msg" >> "$at_group_log"

      # Upon failure, keep the group directory for autopsy, and create
      # the debugging script.  With -e, do not start any further tests.
      at_func_create_debugging_script
      if $at_errexit; then
	echo stop > "$at_stop_file"
      fi
      ;;
  esac
}


## ------------ ##
## Driver loop. ##
## ------------ ##

rm -f "$at_stop_file"
at_first=:

for at_group in $at_groups; do
  at_func_group_prepare
  if cd "$at_group_dir" &&
     at_func_test $at_group &&
     . "$at_test_source"; then :; else
    { $as_echo "$as_me:$LINENO: WARNING: unable to parse test group: $at_group" >&5
$as_echo "$as_me: WARNING: unable to parse test group: $at_group" >&2;}
    at_failed=:
  fi
  at_func_group_postprocess
  test -f "$at_stop_file" && break
  at_first=false
done

# Wrap up the test suite with summary statistics.
cd "$at_helper_dir"

# Use ?..???? when the list must remain sorted, the faster * otherwise.
at_pass_list=`for f in */pass; do echo $f; done | sed '/\*/d; s,/pass,,'`
at_skip_list=`for f in */skip; do echo $f; done | sed '/\*/d; s,/skip,,'`
at_xfail_list=`for f in */xfail; do echo $f; done | sed '/\*/d; s,/xfail,,'`
at_xpass_list=`for f in ?/xpass ??/xpass ???/xpass ????/xpass; do
		 echo $f; done | sed '/?/d; s,/xpass,,'`
at_fail_list=`for f in ?/fail ??/fail ???/fail ????/fail; do
		echo $f; done | sed '/?/d; s,/fail,,'`

set X $at_pass_list $at_xpass_list $at_xfail_list $at_fail_list $at_skip_list
shift; at_group_count=$#
set X $at_xpass_list; shift; at_xpass_count=$#; at_xpass_list=$*
set X $at_xfail_list; shift; at_xfail_count=$#
set X $at_fail_list; shift; at_fail_count=$#; at_fail_list=$*
set X $at_skip_list; shift; at_skip_count=$#

at_func_arith $at_group_count - $at_skip_count
at_run_count=$at_func_arith_result
at_func_arith $at_xpass_count + $at_fail_count
at_unexpected_count=$at_func_arith_result
at_func_arith $at_xfail_count + $at_fail_count
at_total_fail_count=$at_func_arith_result

# Back to the top directory.
cd "$at_dir"
rm -rf "$at_helper_dir"

# Compute the duration of the suite.
at_stop_date=`date`
at_stop_time=`date +%s 2>/dev/null`
$as_echo "$as_me: ending at: $at_stop_date" >&5
case $at_start_time,$at_stop_time in
  [0-9]*,[0-9]*)
    at_func_arith $at_stop_time - $at_start_time
    at_duration_s=$at_func_arith_result
    at_func_arith $at_duration_s / 60
    at_duration_m=$at_func_arith_result
    at_func_arith $at_duration_m / 60
    at_duration_h=$at_func_arith_result
    at_func_arith $at_duration_s % 60
    at_duration_s=$at_func_arith_result
    at_func_arith $at_duration_m % 60
    at_duration_m=$at_func_arith_result
    at_duration="${at_duration_h}h ${at_duration_m}m ${at_duration_s}s"
    $as_echo "$as_me: test suite duration: $at_duration" >&5
    ;;
esac

echo
cat <<\_ASBOX
## ------------- ##
## Test results. ##
## ------------- ##
_ASBOX
echo
{
  echo
  cat <<\_ASBOX
## ------------- ##
## Test results. ##
## ------------- ##
_ASBOX
  echo
} >&5

if test $at_run_count = 1; then
  at_result="1 test"
  at_were=was
else
  at_result="$at_run_count tests"
  at_were=were
fi
if $at_errexit_p && test $at_unexpected_count != 0; then
  if test $at_xpass_count = 1; then
    at_result="$at_result $at_were run, one passed"
  else
    at_result="$at_result $at_were run, one failed"
  fi
  at_result="$at_result unexpectedly and inhibited subsequent tests."
else
  # Don't you just love exponential explosion of the number of cases?
  case $at_xpass_count:$at_fail_count:$at_xfail_count in
    # So far, so good.
    0:0:0) at_result="$at_result $at_were successful." ;;
    0:0:*) at_result="$at_result behaved as expected." ;;

    # Some unexpected failures
    0:*:0) at_result="$at_result $at_were run,
$at_fail_count failed unexpectedly." ;;

    # Some failures, both expected and unexpected
    0:*:1) at_result="$at_result $at_were run,
$at_total_fail_count failed ($at_xfail_count expected failure)." ;;
    0:*:*) at_result="$at_result $at_were run,
$at_total_fail_count failed ($at_xfail_count expected failures)." ;;

    # No unexpected failures, but some xpasses
    *:0:*) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly." ;;

    # No expected failures, but failures and xpasses
    *:1:0) at_result="$at_result $at_were run,
$at_unexpected_count did not behave as expected ($at_fail_count unexpected failure)." ;;
    *:*:0) at_result="$at_result $at_were run,
$at_unexpected_count did not behave as expected ($at_fail_count unexpected failures)." ;;

    # All of them.
    *:*:1) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly,
$at_total_fail_count failed ($at_xfail_count expected failure)." ;;
    *:*:*) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly,
$at_total_fail_count failed ($at_xfail_count expected failures)." ;;
  esac

  if test $at_skip_count = 0 && test $at_run_count -gt 1; then
    at_result="All $at_result"
  fi
fi

# Now put skips in the mix.
case $at_skip_count in
  0) ;;
  1) at_result="$at_result
1 test was skipped." ;;
  *) at_result="$at_result
$at_skip_count tests were skipped." ;;
esac

if test $at_unexpected_count = 0; then
  echo "$at_result"
  echo "$at_result" >&5
else
  echo "ERROR: $at_result" >&2
  echo "ERROR: $at_result" >&5
  {
    echo
    cat <<\_ASBOX
## ------------------------ ##
## Summary of the failures. ##
## ------------------------ ##
_ASBOX

    # Summary of failed and skipped tests.
    if test $at_fail_count != 0; then
      echo "Failed tests:"
      $SHELL "$at_myself" $at_fail_list --list
      echo
    fi
    if test $at_skip_count != 0; then
      echo "Skipped tests:"
      $SHELL "$at_myself" $at_skip_list --list
      echo
    fi
    if test $at_xpass_count != 0; then
      echo "Unexpected passes:"
      $SHELL "$at_myself" $at_xpass_list --list
      echo
    fi
    if test $at_fail_count != 0; then
      cat <<\_ASBOX
## ---------------------- ##
## Detailed failed tests. ##
## ---------------------- ##
_ASBOX
      echo
      for at_group in $at_fail_list
      do
	at_group_normalized=$at_group

  eval 'while :; do
    case $at_group_normalized in #(
    '"$at_format"'*) break;;
    esac
    at_group_normalized=0$at_group_normalized
  done'

	cat "$at_suite_dir/$at_group_normalized/$as_me.log"
	echo
      done
      echo
    fi
    if test -n "$at_top_srcdir"; then
      sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## ${at_top_build_prefix}config.log ##
_ASBOX
      sed 's/^/| /' ${at_top_build_prefix}config.log
      echo
    fi
  } >&5

  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## $as_me.log was created. ##
_ASBOX

  echo
  $as_echo "Please send \`${at_testdir+${at_testdir}/}$as_me.log' and all information you think might help:

   To: <visit-users@email.ornl.gov>
   Subject: [silo 4.9] $as_me: $at_fail_list${at_fail_list:+ failed${at_xpass_list:+, }}$at_xpass_list${at_xpass_list:+ passed unexpectedly}
"
  if test $at_debug_p = false; then
    echo
    echo 'You may investigate any problem if you feel able to do so, in which'
    echo 'case the test suite provides a good starting point.  Its output may'
    $as_echo "be found below \`${at_testdir+${at_testdir}/}$as_me.dir'."
    echo
  fi
    exit 1
fi

exit 0

## ------------- ##
## Actual tests. ##
## ------------- ##
#AT_START_1
# 1. testsuite.at:63: version
at_setup_line='testsuite.at:63'
at_func_banner 1
at_desc="version"
$at_quiet $as_echo_n "  1: $at_desc                                        "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "1. testsuite.at:63: testing ..."
  $at_traceon

cat >expout <<'_ATEOF'
This version of Silo is greater than or equal to 4.6
This version of Silo is NOT greater than or equal to 90.5.2
DBVersion() returns "4.9"
DBVersionGE(4,6,0) returns 1
DBVersionGE(90,5,2) returns 0
On file handle returned from DBCreate...
    DBFileVersion() returns "4.9"
    DBFileVersionGE(4,6,0) returns 1
    DBFileVersionGE(90,5,2) returns 0
On file handle returned from DBOpen...
    DBFileVersion() returns "4.9"
    DBFileVersionGE(4,6,0) returns 1
    DBFileVersionGE(90,5,2) returns 0
On old silo file handle returned from DBOpen...
    DBFileVersion() returns "unknown; 4.5 or older"
    DBFileVersionGE(3,0,0) returns -1
    DBFileVersionGE(4,6,0) returns 0
    DBFileVersionGE(90,5,2) returns 0
_ATEOF

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:84: \$VALGRIND version \$STARGS"
echo testsuite.at:84 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND version $STARGS"; then
  ( $at_traceon; $VALGRIND version $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND version $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
echo stderr:; cat "$at_stderr"
$at_diff expout "$at_stdout" || at_failed=:
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:84"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_1
#AT_START_2
# 2. testsuite.at:86: namescheme
at_setup_line='testsuite.at:86'
at_func_banner 1
at_desc="namescheme"
$at_quiet $as_echo_n "  2: $at_desc                                     "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "2. testsuite.at:86: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:87: \$VALGRIND namescheme"
echo testsuite.at:87 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND namescheme"; then
  ( $at_traceon; $VALGRIND namescheme ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND namescheme ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:87"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_2
#AT_START_3
# 3. testsuite.at:89: point
at_setup_line='testsuite.at:89'
at_func_banner 1
at_desc="point"
$at_quiet $as_echo_n "  3: $at_desc                                          "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "3. testsuite.at:89: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:90: \$VALGRIND point \$STARGS"
echo testsuite.at:90 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND point $STARGS"; then
  ( $at_traceon; $VALGRIND point $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND point $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:90"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_3
#AT_START_4
# 4. testsuite.at:92: extface
at_setup_line='testsuite.at:92'
at_func_banner 1
at_desc="extface"
$at_quiet $as_echo_n "  4: $at_desc                                        "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "4. testsuite.at:92: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:93: \$VALGRIND extface \$STARGS"
echo testsuite.at:93 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND extface $STARGS"; then
  ( $at_traceon; $VALGRIND extface $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND extface $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:93"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_4
#AT_START_5
# 5. testsuite.at:95: testall -small
at_setup_line='testsuite.at:95'
at_func_banner 1
at_desc="testall -small"
$at_quiet $as_echo_n "  5: $at_desc                                 "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "5. testsuite.at:95: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:96: \$VALGRIND testall -small \$STARGS"
echo testsuite.at:96 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND testall -small $STARGS"; then
  ( $at_traceon; $VALGRIND testall -small $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND testall -small $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:96"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_5
#AT_START_6
# 6. testsuite.at:98: TestReadMask
at_setup_line='testsuite.at:98'
at_func_banner 1
at_desc="TestReadMask"
$at_quiet $as_echo_n "  6: $at_desc                                   "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "6. testsuite.at:98: testing ..."
  $at_traceon
 # needs files generated by other execs
{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:99: extface \$STARGS"
echo testsuite.at:99 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "extface $STARGS"; then
  ( $at_traceon; extface $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; extface $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:99"

$at_failed && at_func_log_failure
$at_traceon; }
 # don't valgrind these intermediate parts
{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:100: point \$STARGS"
echo testsuite.at:100 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "point $STARGS"; then
  ( $at_traceon; point $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; point $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:100"

$at_failed && at_func_log_failure
$at_traceon; }

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:101: testall -small \$STARGS"
echo testsuite.at:101 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "testall -small $STARGS"; then
  ( $at_traceon; testall -small $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; testall -small $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:101"

$at_failed && at_func_log_failure
$at_traceon; }

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:102: \$VALGRIND TestReadMask \$STARGS"
echo testsuite.at:102 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND TestReadMask $STARGS"; then
  ( $at_traceon; $VALGRIND TestReadMask $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND TestReadMask $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:102"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_6
#AT_START_7
# 7. testsuite.at:104: array
at_setup_line='testsuite.at:104'
at_func_banner 1
at_desc="array"
$at_quiet $as_echo_n "  7: $at_desc                                          "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "7. testsuite.at:104: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:105: \$VALGRIND array \$STARGS"
echo testsuite.at:105 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND array $STARGS"; then
  ( $at_traceon; $VALGRIND array $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND array $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:105"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_7
#AT_START_8
# 8. testsuite.at:107: multi_test testread
at_setup_line='testsuite.at:107'
at_func_banner 1
at_desc="multi_test testread"
$at_quiet $as_echo_n "  8: $at_desc                            "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "8. testsuite.at:107: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:108: \$VALGRIND multi_test testread \$STARGS"
echo testsuite.at:108 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND multi_test testread $STARGS"; then
  ( $at_traceon; $VALGRIND multi_test testread $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND multi_test testread $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:108"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_8
#AT_START_9
# 9. testsuite.at:110: multi_test earlyclose
at_setup_line='testsuite.at:110'
at_func_banner 1
at_desc="multi_test earlyclose"
$at_quiet $as_echo_n "  9: $at_desc                          "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "9. testsuite.at:110: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:111: \$VALGRIND multi_test earlyclose \$STARGS"
echo testsuite.at:111 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND multi_test earlyclose $STARGS"; then
  ( $at_traceon; $VALGRIND multi_test earlyclose $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND multi_test earlyclose $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:111"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_9
#AT_START_10
# 10. testsuite.at:113: partial_io
at_setup_line='testsuite.at:113'
at_func_banner 1
at_desc="partial_io"
$at_quiet $as_echo_n " 10: $at_desc                                     "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "10. testsuite.at:113: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:114: \$VALGRIND partial_io \$STARGS"
echo testsuite.at:114 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND partial_io $STARGS"; then
  ( $at_traceon; $VALGRIND partial_io $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND partial_io $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:114"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_10
#AT_START_11
# 11. testsuite.at:116: simple
at_setup_line='testsuite.at:116'
at_func_banner 1
at_desc="simple"
$at_quiet $as_echo_n " 11: $at_desc                                         "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "11. testsuite.at:116: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:117: \$VALGRIND simple \$STARGS"
echo testsuite.at:117 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND simple $STARGS"; then
  ( $at_traceon; $VALGRIND simple $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND simple $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:117"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_11
#AT_START_12
# 12. testsuite.at:119: ucd
at_setup_line='testsuite.at:119'
at_func_banner 1
at_desc="ucd"
$at_quiet $as_echo_n " 12: $at_desc                                            "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "12. testsuite.at:119: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:120: \$VALGRIND ucd \$STARGS"
echo testsuite.at:120 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND ucd $STARGS"; then
  ( $at_traceon; $VALGRIND ucd $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND ucd $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:120"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_12
#AT_START_13
# 13. testsuite.at:122: ucdsamp3
at_setup_line='testsuite.at:122'
at_func_banner 1
at_desc="ucdsamp3"
$at_quiet $as_echo_n " 13: $at_desc                                       "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "13. testsuite.at:122: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:123: \$VALGRIND ucdsamp3 \$STARGS"
echo testsuite.at:123 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND ucdsamp3 $STARGS"; then
  ( $at_traceon; $VALGRIND ucdsamp3 $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND ucdsamp3 $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:123"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_13
#AT_START_14
# 14. testsuite.at:125: testall -small -fortran
at_setup_line='testsuite.at:125'
at_func_banner 1
at_desc="testall -small -fortran"
$at_quiet $as_echo_n " 14: $at_desc                        "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "14. testsuite.at:125: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:126: \$VALGRIND testall -small -fortran \$STARGS"
echo testsuite.at:126 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND testall -small -fortran $STARGS"; then
  ( $at_traceon; $VALGRIND testall -small -fortran $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND testall -small -fortran $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:126"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_14
#AT_START_15
# 15. testsuite.at:128: obj
at_setup_line='testsuite.at:128'
at_func_banner 1
at_desc="obj"
$at_quiet $as_echo_n " 15: $at_desc                                            "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "15. testsuite.at:128: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:129: \$VALGRIND obj \$STARGS"
echo testsuite.at:129 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND obj $STARGS"; then
  ( $at_traceon; $VALGRIND obj $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND obj $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:129"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_15
#AT_START_16
# 16. testsuite.at:131: onehex
at_setup_line='testsuite.at:131'
at_func_banner 1
at_desc="onehex"
$at_quiet $as_echo_n " 16: $at_desc                                         "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "16. testsuite.at:131: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:132: \$VALGRIND onehex \$STARGS"
echo testsuite.at:132 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND onehex $STARGS"; then
  ( $at_traceon; $VALGRIND onehex $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND onehex $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:132"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_16
#AT_START_17
# 17. testsuite.at:134: oneprism
at_setup_line='testsuite.at:134'
at_func_banner 1
at_desc="oneprism"
$at_quiet $as_echo_n " 17: $at_desc                                       "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "17. testsuite.at:134: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:135: \$VALGRIND oneprism \$STARGS"
echo testsuite.at:135 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND oneprism $STARGS"; then
  ( $at_traceon; $VALGRIND oneprism $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND oneprism $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:135"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_17
#AT_START_18
# 18. testsuite.at:137: onepyramid
at_setup_line='testsuite.at:137'
at_func_banner 1
at_desc="onepyramid"
$at_quiet $as_echo_n " 18: $at_desc                                     "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "18. testsuite.at:137: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:138: \$VALGRIND onepyramid \$STARGS"
echo testsuite.at:138 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND onepyramid $STARGS"; then
  ( $at_traceon; $VALGRIND onepyramid $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND onepyramid $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:138"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_18
#AT_START_19
# 19. testsuite.at:140: onetet
at_setup_line='testsuite.at:140'
at_func_banner 1
at_desc="onetet"
$at_quiet $as_echo_n " 19: $at_desc                                         "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "19. testsuite.at:140: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:141: \$VALGRIND onetet \$STARGS"
echo testsuite.at:141 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND onetet $STARGS"; then
  ( $at_traceon; $VALGRIND onetet $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND onetet $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:141"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_19
#AT_START_20
# 20. testsuite.at:143: subhex
at_setup_line='testsuite.at:143'
at_func_banner 1
at_desc="subhex"
$at_quiet $as_echo_n " 20: $at_desc                                         "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "20. testsuite.at:143: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:144: \$VALGRIND subhex \$STARGS"
echo testsuite.at:144 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND subhex $STARGS"; then
  ( $at_traceon; $VALGRIND subhex $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND subhex $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:144"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_20
#AT_START_21
# 21. testsuite.at:146: twohex
at_setup_line='testsuite.at:146'
at_func_banner 1
at_desc="twohex"
$at_quiet $as_echo_n " 21: $at_desc                                         "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "21. testsuite.at:146: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:147: \$VALGRIND twohex \$STARGS"
echo testsuite.at:147 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND twohex $STARGS"; then
  ( $at_traceon; $VALGRIND twohex $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND twohex $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:147"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_21
#AT_START_22
# 22. testsuite.at:149: multispec
at_setup_line='testsuite.at:149'
at_func_banner 1
at_desc="multispec"
$at_quiet $as_echo_n " 22: $at_desc                                      "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "22. testsuite.at:149: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:150: \$VALGRIND multispec \$STARGS"
echo testsuite.at:150 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND multispec $STARGS"; then
  ( $at_traceon; $VALGRIND multispec $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND multispec $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:150"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_22
#AT_START_23
# 23. testsuite.at:152: sami
at_setup_line='testsuite.at:152'
at_func_banner 1
at_desc="sami"
$at_quiet $as_echo_n " 23: $at_desc                                           "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "23. testsuite.at:152: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:153: \$VALGRIND sami \$STARGS"
echo testsuite.at:153 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND sami $STARGS"; then
  ( $at_traceon; $VALGRIND sami $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND sami $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:153"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_23
#AT_START_24
# 24. testsuite.at:155: specmix
at_setup_line='testsuite.at:155'
at_func_banner 1
at_desc="specmix"
$at_quiet $as_echo_n " 24: $at_desc                                        "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "24. testsuite.at:155: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:156: \$VALGRIND specmix \$STARGS"
echo testsuite.at:156 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND specmix $STARGS"; then
  ( $at_traceon; $VALGRIND specmix $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND specmix $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:156"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_24
#AT_START_25
# 25. testsuite.at:158: spec
at_setup_line='testsuite.at:158'
at_func_banner 1
at_desc="spec"
$at_quiet $as_echo_n " 25: $at_desc                                           "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "25. testsuite.at:158: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:159: \$VALGRIND spec \$STARGS"
echo testsuite.at:159 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND spec $STARGS"; then
  ( $at_traceon; $VALGRIND spec $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND spec $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:159"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_25
#AT_START_26
# 26. testsuite.at:161: group_test
at_setup_line='testsuite.at:161'
at_func_banner 1
at_desc="group_test"
$at_quiet $as_echo_n " 26: $at_desc                                     "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "26. testsuite.at:161: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:162: \$VALGRIND group_test 0 0 0 \$STARGS"
echo testsuite.at:162 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND group_test 0 0 0 $STARGS"; then
  ( $at_traceon; $VALGRIND group_test 0 0 0 $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND group_test 0 0 0 $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:162"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_26
#AT_START_27
# 27. testsuite.at:164: listtypes
at_setup_line='testsuite.at:164'
at_func_banner 1
at_desc="listtypes"
$at_quiet $as_echo_n " 27: $at_desc                                      "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "27. testsuite.at:164: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:165: \$VALGRIND ucd \$STARGS"
echo testsuite.at:165 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND ucd $STARGS"; then
  ( $at_traceon; $VALGRIND ucd $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND ucd $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:165"

$at_failed && at_func_log_failure
$at_traceon; }

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:166: test -z \"\$STARGS\" && \$VALGRIND listtypes ucd.pdb || \$VALGRIND listtypes ucd.h5"
echo testsuite.at:166 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "test -z \"$STARGS\" && $VALGRIND listtypes ucd.pdb || $VALGRIND listtypes ucd.h5"; then
  ( $at_traceon; test -z "$STARGS" && $VALGRIND listtypes ucd.pdb || $VALGRIND listtypes ucd.h5 ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; test -z "$STARGS" && $VALGRIND listtypes ucd.pdb || $VALGRIND listtypes ucd.h5 ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:166"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_27
#AT_START_28
# 28. testsuite.at:168: alltypes
at_setup_line='testsuite.at:168'
at_func_banner 1
at_desc="alltypes"
$at_quiet $as_echo_n " 28: $at_desc                                       "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "28. testsuite.at:168: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:169: \$VALGRIND alltypes \$STARGS"
echo testsuite.at:169 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND alltypes $STARGS"; then
  ( $at_traceon; $VALGRIND alltypes $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND alltypes $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:169"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_28
#AT_START_29
# 29. testsuite.at:171: wave
at_setup_line='testsuite.at:171'
at_func_banner 1
at_desc="wave"
$at_quiet $as_echo_n " 29: $at_desc                                           "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "29. testsuite.at:171: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:172: \$VALGRIND wave \$STARGS"
echo testsuite.at:172 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND wave $STARGS"; then
  ( $at_traceon; $VALGRIND wave $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND wave $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:172"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_29
#AT_START_30
# 30. testsuite.at:174: polyzl
at_setup_line='testsuite.at:174'
at_func_banner 1
at_desc="polyzl"
$at_quiet $as_echo_n " 30: $at_desc                                         "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "30. testsuite.at:174: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:175: \$VALGRIND polyzl \$STARGS"
echo testsuite.at:175 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND polyzl $STARGS"; then
  ( $at_traceon; $VALGRIND polyzl $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND polyzl $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:175"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_30
#AT_START_31
# 31. testsuite.at:177: csg
at_setup_line='testsuite.at:177'
at_func_banner 1
at_desc="csg"
$at_quiet $as_echo_n " 31: $at_desc                                            "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "31. testsuite.at:177: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:178: \$VALGRIND csg \$STARGS"
echo testsuite.at:178 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND csg $STARGS"; then
  ( $at_traceon; $VALGRIND csg $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND csg $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:178"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_31
#AT_START_32
# 32. testsuite.at:180: rocket
at_setup_line='testsuite.at:180'
at_func_banner 1
at_desc="rocket"
$at_quiet $as_echo_n " 32: $at_desc                                         "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "32. testsuite.at:180: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:181: \$VALGRIND rocket \$STARGS"
echo testsuite.at:181 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND rocket $STARGS"; then
  ( $at_traceon; $VALGRIND rocket $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND rocket $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:181"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_32
#AT_START_33
# 33. testsuite.at:183: mmadjacency
at_setup_line='testsuite.at:183'
at_func_banner 1
at_desc="mmadjacency"
$at_quiet $as_echo_n " 33: $at_desc                                    "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "33. testsuite.at:183: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:184: \$VALGRIND mmadjacency \$STARGS"
echo testsuite.at:184 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND mmadjacency $STARGS"; then
  ( $at_traceon; $VALGRIND mmadjacency $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND mmadjacency $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:184"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_33
#AT_START_34
# 34. testsuite.at:186: mat3d_3across
at_setup_line='testsuite.at:186'
at_func_banner 1
at_desc="mat3d_3across"
$at_quiet $as_echo_n " 34: $at_desc                                  "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "34. testsuite.at:186: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:187: \$VALGRIND mat3d_3across \$STARGS"
echo testsuite.at:187 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND mat3d_3across $STARGS"; then
  ( $at_traceon; $VALGRIND mat3d_3across $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND mat3d_3across $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
at_func_diff_devnull "$at_stdout" || at_failed=:
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:187"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_34
#AT_START_35
# 35. testsuite.at:189: ucd1d
at_setup_line='testsuite.at:189'
at_func_banner 1
at_desc="ucd1d"
$at_quiet $as_echo_n " 35: $at_desc                                          "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "35. testsuite.at:189: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:190: \$VALGRIND ucd1d \$STARGS"
echo testsuite.at:190 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND ucd1d $STARGS"; then
  ( $at_traceon; $VALGRIND ucd1d $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND ucd1d $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:190"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_35
#AT_START_36
# 36. testsuite.at:192: dir
at_setup_line='testsuite.at:192'
at_func_banner 1
at_desc="dir"
$at_quiet $as_echo_n " 36: $at_desc                                            "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "36. testsuite.at:192: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:193: \$VALGRIND dir \$STARGS"
echo testsuite.at:193 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND dir $STARGS"; then
  ( $at_traceon; $VALGRIND dir $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND dir $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:193"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_36
#AT_START_37
# 37. testsuite.at:195: quad
at_setup_line='testsuite.at:195'
at_func_banner 1
at_desc="quad"
$at_quiet $as_echo_n " 37: $at_desc                                           "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "37. testsuite.at:195: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:196: \$VALGRIND quad \$STARGS"
echo testsuite.at:196 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND quad $STARGS"; then
  ( $at_traceon; $VALGRIND quad $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND quad $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:196"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_37
#AT_START_38
# 38. testsuite.at:198: arbpoly2d
at_setup_line='testsuite.at:198'
at_func_banner 1
at_desc="arbpoly2d"
$at_quiet $as_echo_n " 38: $at_desc                                      "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "38. testsuite.at:198: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:199: \$VALGRIND arbpoly2d \$STARGS"
echo testsuite.at:199 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND arbpoly2d $STARGS"; then
  ( $at_traceon; $VALGRIND arbpoly2d $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND arbpoly2d $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:199"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_38
#AT_START_39
# 39. testsuite.at:201: readstuff
at_setup_line='testsuite.at:201'
at_func_banner 1
at_desc="readstuff"
$at_quiet $as_echo_n " 39: $at_desc                                      "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "39. testsuite.at:201: testing ..."
  $at_traceon
 # needs data file from multi_test
{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:202: multi_test \$STARGS"
echo testsuite.at:202 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "multi_test $STARGS"; then
  ( $at_traceon; multi_test $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; multi_test $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:202"

$at_failed && at_func_log_failure
$at_traceon; }
 # don't valgrind these intermediate parts
{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:203: \$VALGRIND readstuff \$STARGS"
echo testsuite.at:203 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND readstuff $STARGS"; then
  ( $at_traceon; $VALGRIND readstuff $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND readstuff $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_skip $at_status "$at_srcdir/testsuite.at:203"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_39
#AT_START_40
# 40. testsuite.at:205: testfs
at_setup_line='testsuite.at:205'
at_func_banner 1
at_desc="testfs"
$at_quiet $as_echo_n " 40: $at_desc                                         "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "40. testsuite.at:205: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:206: \$VALGRIND testfs \$STARGS"
echo testsuite.at:206 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND testfs $STARGS"; then
  ( $at_traceon; $VALGRIND testfs $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND testfs $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:206"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_40
#AT_START_41
# 41. testsuite.at:208: empty
at_setup_line='testsuite.at:208'
at_func_banner 1
at_desc="empty"
$at_quiet $as_echo_n " 41: $at_desc                                          "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "41. testsuite.at:208: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:209: \$VALGRIND empty \$STARGS"
echo testsuite.at:209 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND empty $STARGS"; then
  ( $at_traceon; $VALGRIND empty $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND empty $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:209"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_41
#AT_START_42
# 42. testsuite.at:213: read
at_setup_line='testsuite.at:213'
at_func_banner 2
at_desc="read"
$at_quiet $as_echo_n " 42: $at_desc                                           "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "42. testsuite.at:213: testing ..."
  $at_traceon


{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:215: multi_test \$STARGS hdf-friendly"
echo testsuite.at:215 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "multi_test $STARGS hdf-friendly"; then
  ( $at_traceon; multi_test $STARGS hdf-friendly ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; multi_test $STARGS hdf-friendly ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:215"

$at_failed && at_func_log_failure
$at_traceon; }
 # generate data for python tests
{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:216: test -z \"\$PYTHON\" && exit 77 || env PYTHONPATH=../../../tools/python/.libs \$PYTHON ../../test_read.py"
echo testsuite.at:216 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "test -z \"$PYTHON\" && exit 77 || env PYTHONPATH=../../../tools/python/.libs $PYTHON ../../test_read.py"; then
  ( $at_traceon; test -z "$PYTHON" && exit 77 || env PYTHONPATH=../../../tools/python/.libs $PYTHON ../../test_read.py ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; test -z "$PYTHON" && exit 77 || env PYTHONPATH=../../../tools/python/.libs $PYTHON ../../test_read.py ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:216"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_42
#AT_START_43
# 43. testsuite.at:218: write
at_setup_line='testsuite.at:218'
at_func_banner 2
at_desc="write"
$at_quiet $as_echo_n " 43: $at_desc                                          "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "43. testsuite.at:218: testing ..."
  $at_traceon


cat >expout <<'_ATEOF'
toc=nvar = 12
var_names = (_fileinfo, _silolibinfo, t1, t10, t11, t2, t3, t4, t5, t6, t7, t8)
ndir = 1
dir_names = (a)

t2='hello'
t6= (1.2, 10.199999999999999)
a/t8='x2'
t9=x3
/t5= (1.2, 10.0)
_ATEOF

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:231: test -z \"\$PYTHON\" && exit 77 || env PYTHONPATH=../../../tools/python/.libs \$PYTHON ../../test_write.py"
echo testsuite.at:231 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "test -z \"$PYTHON\" && exit 77 || env PYTHONPATH=../../../tools/python/.libs $PYTHON ../../test_write.py"; then
  ( $at_traceon; test -z "$PYTHON" && exit 77 || env PYTHONPATH=../../../tools/python/.libs $PYTHON ../../test_write.py ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; test -z "$PYTHON" && exit 77 || env PYTHONPATH=../../../tools/python/.libs $PYTHON ../../test_write.py ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
echo stderr:; cat "$at_stderr"
$at_diff expout "$at_stdout" || at_failed=:
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:231"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_43
#AT_START_44
# 44. testsuite.at:233: error handling
at_setup_line='testsuite.at:233'
at_func_banner 2
at_desc="error handling"
$at_quiet $as_echo_n " 44: $at_desc                                 "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "44. testsuite.at:233: testing ..."
  $at_traceon


{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:235: multi_test \$STARGS hdf-friendly"
echo testsuite.at:235 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "multi_test $STARGS hdf-friendly"; then
  ( $at_traceon; multi_test $STARGS hdf-friendly ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; multi_test $STARGS hdf-friendly ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:235"

$at_failed && at_func_log_failure
$at_traceon; }
 # generate data for python tests
{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:236: test -z \"\$PYTHON\" && exit 77 || env PYTHONPATH=../../../tools/python/.libs \$PYTHON ../../test_error.py"
echo testsuite.at:236 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "test -z \"$PYTHON\" && exit 77 || env PYTHONPATH=../../../tools/python/.libs $PYTHON ../../test_error.py"; then
  ( $at_traceon; test -z "$PYTHON" && exit 77 || env PYTHONPATH=../../../tools/python/.libs $PYTHON ../../test_error.py ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; test -z "$PYTHON" && exit 77 || env PYTHONPATH=../../../tools/python/.libs $PYTHON ../../test_error.py ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:236"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_44
#AT_START_45
# 45. testsuite.at:238: write objects
at_setup_line='testsuite.at:238'
at_func_banner 2
at_desc="write objects"
$at_quiet $as_echo_n " 45: $at_desc                                  "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "45. testsuite.at:238: testing ..."
  $at_traceon


{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:240: test -z \"\$PYTHON\" -o -z \"\$BROWSER\" && exit 77 || \$VALGRIND testonehex \`pwd\`"
echo testsuite.at:240 >"$at_check_line_file"

if { echo 'Not enabling shell tracing (command contains a `...` command substitution)'
   false; }; then
  ( $at_traceon; test -z "$PYTHON" -o -z "$BROWSER" && exit 77 || $VALGRIND testonehex `pwd` ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; test -z "$PYTHON" -o -z "$BROWSER" && exit 77 || $VALGRIND testonehex `pwd` ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:240"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_45
#AT_START_46
# 46. testsuite.at:244: testpdb
at_setup_line='testsuite.at:244'
at_func_banner 3
at_desc="testpdb"
$at_quiet $as_echo_n " 46: $at_desc                                        "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "46. testsuite.at:244: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:245: test ! \\( -e ../src/score/lite_score.h -o -e ../../../src/pdb/lite_pdb.h \\) -o \"\$STARGS\" = DB_HDF5 && exit 77 || \$VALGRIND testpdb"
echo testsuite.at:245 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "test ! \\( -e ../src/score/lite_score.h -o -e ../../../src/pdb/lite_pdb.h \\) -o \"$STARGS\" = DB_HDF5 && exit 77 || $VALGRIND testpdb"; then
  ( $at_traceon; test ! \( -e ../src/score/lite_score.h -o -e ../../../src/pdb/lite_pdb.h \) -o "$STARGS" = DB_HDF5 && exit 77 || $VALGRIND testpdb ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; test ! \( -e ../src/score/lite_score.h -o -e ../../../src/pdb/lite_pdb.h \) -o "$STARGS" = DB_HDF5 && exit 77 || $VALGRIND testpdb ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_skip $at_status "$at_srcdir/testsuite.at:245"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_46
#AT_START_47
# 47. testsuite.at:247: pdbtst
at_setup_line='testsuite.at:247'
at_func_banner 3
at_desc="pdbtst"
$at_quiet $as_echo_n " 47: $at_desc                                         "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "47. testsuite.at:247: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:248: test ! \\( -e ../src/score/lite_score.h -o -e ../../../src/pdb/lite_pdb.h \\) -o \"\$STARGS\" = DB_HDF5 && exit 77 || \$VALGRIND pdbtst"
echo testsuite.at:248 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "test ! \\( -e ../src/score/lite_score.h -o -e ../../../src/pdb/lite_pdb.h \\) -o \"$STARGS\" = DB_HDF5 && exit 77 || $VALGRIND pdbtst"; then
  ( $at_traceon; test ! \( -e ../src/score/lite_score.h -o -e ../../../src/pdb/lite_pdb.h \) -o "$STARGS" = DB_HDF5 && exit 77 || $VALGRIND pdbtst ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; test ! \( -e ../src/score/lite_score.h -o -e ../../../src/pdb/lite_pdb.h \) -o "$STARGS" = DB_HDF5 && exit 77 || $VALGRIND pdbtst ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_skip $at_status "$at_srcdir/testsuite.at:248"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_47
#AT_START_48
# 48. testsuite.at:252: grab
at_setup_line='testsuite.at:252'
at_func_banner 4
at_desc="grab"
$at_quiet $as_echo_n " 48: $at_desc                                           "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "48. testsuite.at:252: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:253: test \"\$STARGS\" != DB_HDF5 && exit 77 || \$VALGRIND grab"
echo testsuite.at:253 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "test \"$STARGS\" != DB_HDF5 && exit 77 || $VALGRIND grab"; then
  ( $at_traceon; test "$STARGS" != DB_HDF5 && exit 77 || $VALGRIND grab ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; test "$STARGS" != DB_HDF5 && exit 77 || $VALGRIND grab ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:253"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_48
#AT_START_49
# 49. testsuite.at:255: compression gzip
at_setup_line='testsuite.at:255'
at_func_banner 4
at_desc="compression gzip"
$at_quiet $as_echo_n " 49: $at_desc                               "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "49. testsuite.at:255: testing ..."
  $at_traceon


{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:257: test \"\$STARGS\" != DB_HDF5 && exit 77 || \$VALGRIND compression gzip"
echo testsuite.at:257 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "test \"$STARGS\" != DB_HDF5 && exit 77 || $VALGRIND compression gzip"; then
  ( $at_traceon; test "$STARGS" != DB_HDF5 && exit 77 || $VALGRIND compression gzip ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; test "$STARGS" != DB_HDF5 && exit 77 || $VALGRIND compression gzip ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:257"

$at_failed && at_func_log_failure
$at_traceon; }

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:258: test \"\$STARGS\" != DB_HDF5 && exit 77 || \$VALGRIND compression readonly"
echo testsuite.at:258 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "test \"$STARGS\" != DB_HDF5 && exit 77 || $VALGRIND compression readonly"; then
  ( $at_traceon; test "$STARGS" != DB_HDF5 && exit 77 || $VALGRIND compression readonly ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; test "$STARGS" != DB_HDF5 && exit 77 || $VALGRIND compression readonly ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:258"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_49
#AT_START_50
# 50. testsuite.at:260: compression szip
at_setup_line='testsuite.at:260'
at_func_banner 4
at_desc="compression szip"
$at_quiet $as_echo_n " 50: $at_desc                               "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "50. testsuite.at:260: testing ..."
  $at_traceon


{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:262: test \"\$STARGS\" != DB_HDF5 && exit 77 || \$VALGRIND compression szip"
echo testsuite.at:262 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "test \"$STARGS\" != DB_HDF5 && exit 77 || $VALGRIND compression szip"; then
  ( $at_traceon; test "$STARGS" != DB_HDF5 && exit 77 || $VALGRIND compression szip ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; test "$STARGS" != DB_HDF5 && exit 77 || $VALGRIND compression szip ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:262"

$at_failed && at_func_log_failure
$at_traceon; }

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:263: test \"\$STARGS\" != DB_HDF5 && exit 77 || \$VALGRIND compression readonly"
echo testsuite.at:263 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "test \"$STARGS\" != DB_HDF5 && exit 77 || $VALGRIND compression readonly"; then
  ( $at_traceon; test "$STARGS" != DB_HDF5 && exit 77 || $VALGRIND compression readonly ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; test "$STARGS" != DB_HDF5 && exit 77 || $VALGRIND compression readonly ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:263"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_50
#AT_START_51
# 51. testsuite.at:265: compression fpzip
at_setup_line='testsuite.at:265'
at_func_banner 4
at_desc="compression fpzip"
$at_quiet $as_echo_n " 51: $at_desc                              "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "51. testsuite.at:265: testing ..."
  $at_traceon


{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:267: test ! \\( -e ../src/fpzip/read.o -o -e ../../../src/fpzip/read.o \\) -o \"\$STARGS\" != DB_HDF5 && exit 77 || \$VALGRIND compression fpzip"
echo testsuite.at:267 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "test ! \\( -e ../src/fpzip/read.o -o -e ../../../src/fpzip/read.o \\) -o \"$STARGS\" != DB_HDF5 && exit 77 || $VALGRIND compression fpzip"; then
  ( $at_traceon; test ! \( -e ../src/fpzip/read.o -o -e ../../../src/fpzip/read.o \) -o "$STARGS" != DB_HDF5 && exit 77 || $VALGRIND compression fpzip ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; test ! \( -e ../src/fpzip/read.o -o -e ../../../src/fpzip/read.o \) -o "$STARGS" != DB_HDF5 && exit 77 || $VALGRIND compression fpzip ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:267"

$at_failed && at_func_log_failure
$at_traceon; }

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:268: test ! \\( -e ../src/fpzip/read.o -o -e ../../../src/fpzip/read.o \\) -o \"\$STARGS\" != DB_HDF5 && exit 77 || \$VALGRIND compression readonly"
echo testsuite.at:268 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "test ! \\( -e ../src/fpzip/read.o -o -e ../../../src/fpzip/read.o \\) -o \"$STARGS\" != DB_HDF5 && exit 77 || $VALGRIND compression readonly"; then
  ( $at_traceon; test ! \( -e ../src/fpzip/read.o -o -e ../../../src/fpzip/read.o \) -o "$STARGS" != DB_HDF5 && exit 77 || $VALGRIND compression readonly ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; test ! \( -e ../src/fpzip/read.o -o -e ../../../src/fpzip/read.o \) -o "$STARGS" != DB_HDF5 && exit 77 || $VALGRIND compression readonly ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:268"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_51
#AT_START_52
# 52. testsuite.at:270: compression lossy3
at_setup_line='testsuite.at:270'
at_func_banner 4
at_desc="compression lossy3"
$at_quiet $as_echo_n " 52: $at_desc                             "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "52. testsuite.at:270: testing ..."
  $at_traceon


{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:272: test ! \\( -e ../src/fpzip/read.o -o -e ../../../src/fpzip/read.o \\) -o \"\$STARGS\" != DB_HDF5 && exit 77 || \$VALGRIND compression lossy3"
echo testsuite.at:272 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "test ! \\( -e ../src/fpzip/read.o -o -e ../../../src/fpzip/read.o \\) -o \"$STARGS\" != DB_HDF5 && exit 77 || $VALGRIND compression lossy3"; then
  ( $at_traceon; test ! \( -e ../src/fpzip/read.o -o -e ../../../src/fpzip/read.o \) -o "$STARGS" != DB_HDF5 && exit 77 || $VALGRIND compression lossy3 ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; test ! \( -e ../src/fpzip/read.o -o -e ../../../src/fpzip/read.o \) -o "$STARGS" != DB_HDF5 && exit 77 || $VALGRIND compression lossy3 ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:272"

$at_failed && at_func_log_failure
$at_traceon; }

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:273: test ! \\( -e ../src/fpzip/read.o -o -e ../../../src/fpzip/read.o \\) -o \"\$STARGS\" != DB_HDF5 && exit 77 || \$VALGRIND compression readonly"
echo testsuite.at:273 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "test ! \\( -e ../src/fpzip/read.o -o -e ../../../src/fpzip/read.o \\) -o \"$STARGS\" != DB_HDF5 && exit 77 || $VALGRIND compression readonly"; then
  ( $at_traceon; test ! \( -e ../src/fpzip/read.o -o -e ../../../src/fpzip/read.o \) -o "$STARGS" != DB_HDF5 && exit 77 || $VALGRIND compression readonly ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; test ! \( -e ../src/fpzip/read.o -o -e ../../../src/fpzip/read.o \) -o "$STARGS" != DB_HDF5 && exit 77 || $VALGRIND compression readonly ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_func_check_status 50 $at_status "$at_srcdir/testsuite.at:273"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_52
#AT_START_53
# 53. testsuite.at:275: compression minratio1000
at_setup_line='testsuite.at:275'
at_func_banner 4
at_desc="compression minratio1000"
$at_quiet $as_echo_n " 53: $at_desc                       "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "53. testsuite.at:275: testing ..."
  $at_traceon


{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:277: test ! \\( -e ../src/fpzip/read.o -o -e ../../../src/fpzip/read.o \\) -o \"\$STARGS\" != DB_HDF5 && exit 77 || \$VALGRIND compression minratio1000"
echo testsuite.at:277 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "test ! \\( -e ../src/fpzip/read.o -o -e ../../../src/fpzip/read.o \\) -o \"$STARGS\" != DB_HDF5 && exit 77 || $VALGRIND compression minratio1000"; then
  ( $at_traceon; test ! \( -e ../src/fpzip/read.o -o -e ../../../src/fpzip/read.o \) -o "$STARGS" != DB_HDF5 && exit 77 || $VALGRIND compression minratio1000 ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; test ! \( -e ../src/fpzip/read.o -o -e ../../../src/fpzip/read.o \) -o "$STARGS" != DB_HDF5 && exit 77 || $VALGRIND compression minratio1000 ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_func_check_status 1 $at_status "$at_srcdir/testsuite.at:277"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_53
#AT_START_54
# 54. testsuite.at:279: testhzip
at_setup_line='testsuite.at:279'
at_func_banner 4
at_desc="testhzip"
$at_quiet $as_echo_n " 54: $at_desc                                       "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "54. testsuite.at:279: testing ..."
  $at_traceon


{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:281: test ! \\( -e ../src/hzip/hzutil.o -o -e ../../../src/hzip/hzutil.o \\) -o -z \"\$BROWSER\" -o \"\$STARGS\" != DB_HDF5 && exit 77 || \$VALGRIND testhzip \`pwd\`"
echo testsuite.at:281 >"$at_check_line_file"

if { echo 'Not enabling shell tracing (command contains a `...` command substitution)'
   false; }; then
  ( $at_traceon; test ! \( -e ../src/hzip/hzutil.o -o -e ../../../src/hzip/hzutil.o \) -o -z "$BROWSER" -o "$STARGS" != DB_HDF5 && exit 77 || $VALGRIND testhzip `pwd` ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; test ! \( -e ../src/hzip/hzutil.o -o -e ../../../src/hzip/hzutil.o \) -o -z "$BROWSER" -o "$STARGS" != DB_HDF5 && exit 77 || $VALGRIND testhzip `pwd` ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:281"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_54
#AT_START_55
# 55. testsuite.at:283: checksums
at_setup_line='testsuite.at:283'
at_func_banner 4
at_desc="checksums"
$at_quiet $as_echo_n " 55: $at_desc                                      "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "55. testsuite.at:283: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:284: test -z \"\$BROWSER\" -o \"\$STARGS\" != DB_HDF5 && exit 77 || \$VALGRIND checksums \`pwd\`"
echo testsuite.at:284 >"$at_check_line_file"

if { echo 'Not enabling shell tracing (command contains a `...` command substitution)'
   false; }; then
  ( $at_traceon; test -z "$BROWSER" -o "$STARGS" != DB_HDF5 && exit 77 || $VALGRIND checksums `pwd` ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; test -z "$BROWSER" -o "$STARGS" != DB_HDF5 && exit 77 || $VALGRIND checksums `pwd` ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:284"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_55
#AT_START_56
# 56. testsuite.at:286: xversion
at_setup_line='testsuite.at:286'
at_func_banner 4
at_desc="xversion"
$at_quiet $as_echo_n " 56: $at_desc                                       "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "56. testsuite.at:286: testing ..."
  $at_traceon

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:287: test -z \"\$BROWSER\" -o \"\$STARGS\" != DB_HDF5 && exit 77 || \$VALGRIND testxvers \`pwd\`"
echo testsuite.at:287 >"$at_check_line_file"

if { echo 'Not enabling shell tracing (command contains a `...` command substitution)'
   false; }; then
  ( $at_traceon; test -z "$BROWSER" -o "$STARGS" != DB_HDF5 && exit 77 || $VALGRIND testxvers `pwd` ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; test -z "$BROWSER" -o "$STARGS" != DB_HDF5 && exit 77 || $VALGRIND testxvers `pwd` ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:287"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_56
#AT_START_57
# 57. testsuite.at:289: largefile
at_setup_line='testsuite.at:289'
at_func_banner 4
at_desc="largefile"
$at_quiet $as_echo_n " 57: $at_desc                                      "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "57. testsuite.at:289: testing ..."
  $at_traceon


{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:291: test \"\$STARGS\" != DB_HDF5 && exit 77 || \$VALGRIND largefile"
echo testsuite.at:291 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "test \"$STARGS\" != DB_HDF5 && exit 77 || $VALGRIND largefile"; then
  ( $at_traceon; test "$STARGS" != DB_HDF5 && exit 77 || $VALGRIND largefile ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; test "$STARGS" != DB_HDF5 && exit 77 || $VALGRIND largefile ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:291"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_57
#AT_START_58
# 58. testsuite.at:295: arrayf77
at_setup_line='testsuite.at:295'
at_func_banner 5
at_desc="arrayf77"
$at_quiet $as_echo_n " 58: $at_desc                                       "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "58. testsuite.at:295: testing ..."
  $at_traceon


{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:297: test ! \\( -f arrayf77 -o -f ../../arrayf77 \\) && exit 77 || \$VALGRIND arrayf77 \$STARGS"
echo testsuite.at:297 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "test ! \\( -f arrayf77 -o -f ../../arrayf77 \\) && exit 77 || $VALGRIND arrayf77 $STARGS"; then
  ( $at_traceon; test ! \( -f arrayf77 -o -f ../../arrayf77 \) && exit 77 || $VALGRIND arrayf77 $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; test ! \( -f arrayf77 -o -f ../../arrayf77 \) && exit 77 || $VALGRIND arrayf77 $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:297"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_58
#AT_START_59
# 59. testsuite.at:299: curvef77
at_setup_line='testsuite.at:299'
at_func_banner 5
at_desc="curvef77"
$at_quiet $as_echo_n " 59: $at_desc                                       "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "59. testsuite.at:299: testing ..."
  $at_traceon


{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:301: test ! \\( -f curvef77 -o -f ../../curvef77 \\) && exit 77 || \$VALGRIND curvef77 \$STARGS"
echo testsuite.at:301 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "test ! \\( -f curvef77 -o -f ../../curvef77 \\) && exit 77 || $VALGRIND curvef77 $STARGS"; then
  ( $at_traceon; test ! \( -f curvef77 -o -f ../../curvef77 \) && exit 77 || $VALGRIND curvef77 $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; test ! \( -f curvef77 -o -f ../../curvef77 \) && exit 77 || $VALGRIND curvef77 $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:301"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_59
#AT_START_60
# 60. testsuite.at:303: matf77
at_setup_line='testsuite.at:303'
at_func_banner 5
at_desc="matf77"
$at_quiet $as_echo_n " 60: $at_desc                                         "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "60. testsuite.at:303: testing ..."
  $at_traceon


{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:305: test ! \\( -f matf77 -o -f ../../matf77 \\) && exit 77 || \$VALGRIND matf77 \$STARGS"
echo testsuite.at:305 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "test ! \\( -f matf77 -o -f ../../matf77 \\) && exit 77 || $VALGRIND matf77 $STARGS"; then
  ( $at_traceon; test ! \( -f matf77 -o -f ../../matf77 \) && exit 77 || $VALGRIND matf77 $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; test ! \( -f matf77 -o -f ../../matf77 \) && exit 77 || $VALGRIND matf77 $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:305"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_60
#AT_START_61
# 61. testsuite.at:307: pointf77
at_setup_line='testsuite.at:307'
at_func_banner 5
at_desc="pointf77"
$at_quiet $as_echo_n " 61: $at_desc                                       "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "61. testsuite.at:307: testing ..."
  $at_traceon


{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:309: test ! \\( -f pointf77 -o -f ../../pointf77 \\) && exit 77 || \$VALGRIND pointf77 \$STARGS"
echo testsuite.at:309 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "test ! \\( -f pointf77 -o -f ../../pointf77 \\) && exit 77 || $VALGRIND pointf77 $STARGS"; then
  ( $at_traceon; test ! \( -f pointf77 -o -f ../../pointf77 \) && exit 77 || $VALGRIND pointf77 $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; test ! \( -f pointf77 -o -f ../../pointf77 \) && exit 77 || $VALGRIND pointf77 $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:309"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_61
#AT_START_62
# 62. testsuite.at:311: quadf77
at_setup_line='testsuite.at:311'
at_func_banner 5
at_desc="quadf77"
$at_quiet $as_echo_n " 62: $at_desc                                        "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "62. testsuite.at:311: testing ..."
  $at_traceon


{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:313: test ! \\( -f quadf77 -o -f ../../quadf77 \\) && exit 77 || \$VALGRIND quadf77 \$STARGS"
echo testsuite.at:313 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "test ! \\( -f quadf77 -o -f ../../quadf77 \\) && exit 77 || $VALGRIND quadf77 $STARGS"; then
  ( $at_traceon; test ! \( -f quadf77 -o -f ../../quadf77 \) && exit 77 || $VALGRIND quadf77 $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; test ! \( -f quadf77 -o -f ../../quadf77 \) && exit 77 || $VALGRIND quadf77 $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:313"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_62
#AT_START_63
# 63. testsuite.at:315: testallf77
at_setup_line='testsuite.at:315'
at_func_banner 5
at_desc="testallf77"
$at_quiet $as_echo_n " 63: $at_desc                                     "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "63. testsuite.at:315: testing ..."
  $at_traceon


{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:317: test ! \\( -f testallf77 -o -f ../../testallf77 \\) && exit 77 || \$VALGRIND testallf77 \$STARGS"
echo testsuite.at:317 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "test ! \\( -f testallf77 -o -f ../../testallf77 \\) && exit 77 || $VALGRIND testallf77 $STARGS"; then
  ( $at_traceon; test ! \( -f testallf77 -o -f ../../testallf77 \) && exit 77 || $VALGRIND testallf77 $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; test ! \( -f testallf77 -o -f ../../testallf77 \) && exit 77 || $VALGRIND testallf77 $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:317"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_63
#AT_START_64
# 64. testsuite.at:319: ucdf77
at_setup_line='testsuite.at:319'
at_func_banner 5
at_desc="ucdf77"
$at_quiet $as_echo_n " 64: $at_desc                                         "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "64. testsuite.at:319: testing ..."
  $at_traceon


{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:321: test ! \\( -f ucdf77 -o -f ../../ucdf77 \\) && exit 77 || \$VALGRIND ucdf77 \$STARGS"
echo testsuite.at:321 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "test ! \\( -f ucdf77 -o -f ../../ucdf77 \\) && exit 77 || $VALGRIND ucdf77 $STARGS"; then
  ( $at_traceon; test ! \( -f ucdf77 -o -f ../../ucdf77 \) && exit 77 || $VALGRIND ucdf77 $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; test ! \( -f ucdf77 -o -f ../../ucdf77 \) && exit 77 || $VALGRIND ucdf77 $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:321"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_64
#AT_START_65
# 65. testsuite.at:323: csgmesh
at_setup_line='testsuite.at:323'
at_func_banner 5
at_desc="csgmesh"
$at_quiet $as_echo_n " 65: $at_desc                                        "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "65. testsuite.at:323: testing ..."
  $at_traceon


{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:325: test ! \\( -f csgmesh -o -f ../../csgmesh \\) && exit 77 || \$VALGRIND csgmesh \$STARGS"
echo testsuite.at:325 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "test ! \\( -f csgmesh -o -f ../../csgmesh \\) && exit 77 || $VALGRIND csgmesh $STARGS"; then
  ( $at_traceon; test ! \( -f csgmesh -o -f ../../csgmesh \) && exit 77 || $VALGRIND csgmesh $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; test ! \( -f csgmesh -o -f ../../csgmesh \) && exit 77 || $VALGRIND csgmesh $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:325"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_65
#AT_START_66
# 66. testsuite.at:329: silock
at_setup_line='testsuite.at:329'
at_func_banner 6
at_desc="silock"
$at_quiet $as_echo_n " 66: $at_desc                                         "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "66. testsuite.at:329: testing ..."
  $at_traceon


{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:331: testsilock \`pwd\` \$STARGS"
echo testsuite.at:331 >"$at_check_line_file"

if { echo 'Not enabling shell tracing (command contains a `...` command substitution)'
   false; }; then
  ( $at_traceon; testsilock `pwd` $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; testsilock `pwd` $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:331"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_66
#AT_START_67
# 67. testsuite.at:333: force single
at_setup_line='testsuite.at:333'
at_func_banner 6
at_desc="force single"
$at_quiet $as_echo_n " 67: $at_desc                                   "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "67. testsuite.at:333: testing ..."
  $at_traceon


{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:335: specmix \$STARGS"
echo testsuite.at:335 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "specmix $STARGS"; then
  ( $at_traceon; specmix $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; specmix $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:335"

$at_failed && at_func_log_failure
$at_traceon; }

{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:336: testdtypes \`pwd\` \$STARGS"
echo testsuite.at:336 >"$at_check_line_file"

if { echo 'Not enabling shell tracing (command contains a `...` command substitution)'
   false; }; then
  ( $at_traceon; testdtypes `pwd` $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; testdtypes `pwd` $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:336"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_67
#AT_START_68
# 68. testsuite.at:338: multi_file
at_setup_line='testsuite.at:338'
at_func_banner 6
at_desc="multi_file"
$at_quiet $as_echo_n " 68: $at_desc                                     "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "68. testsuite.at:338: testing ..."
  $at_traceon


{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:340: \$VALGRIND multi_file \$STARGS"
echo testsuite.at:340 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND multi_file $STARGS"; then
  ( $at_traceon; $VALGRIND multi_file $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND multi_file $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:340"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_68
#AT_START_69
# 69. testsuite.at:342: multi_file use-ns
at_setup_line='testsuite.at:342'
at_func_banner 6
at_desc="multi_file use-ns"
$at_quiet $as_echo_n " 69: $at_desc                              "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "69. testsuite.at:342: testing ..."
  $at_traceon


{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:344: \$VALGRIND multi_file use-ns \$STARGS"
echo testsuite.at:344 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND multi_file use-ns $STARGS"; then
  ( $at_traceon; $VALGRIND multi_file use-ns $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND multi_file use-ns $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:344"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_69
#AT_START_70
# 70. testsuite.at:346: testall -medium
at_setup_line='testsuite.at:346'
at_func_banner 6
at_desc="testall -medium"
$at_quiet $as_echo_n " 70: $at_desc                                "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "70. testsuite.at:346: testing ..."
  $at_traceon


{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:348: \$VALGRIND testall -medium \$STARGS"
echo testsuite.at:348 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND testall -medium $STARGS"; then
  ( $at_traceon; $VALGRIND testall -medium $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND testall -medium $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:348"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_70
#AT_START_71
# 71. testsuite.at:350: testall -large
at_setup_line='testsuite.at:350'
at_func_banner 6
at_desc="testall -large"
$at_quiet $as_echo_n " 71: $at_desc                                 "
at_xfail=no
echo "#                             -*- compilation -*-" >> "$at_group_log"
(
  $as_echo "71. testsuite.at:350: testing ..."
  $at_traceon


{ $at_traceoff
$as_echo "$at_srcdir/testsuite.at:352: \$VALGRIND testall -large \$STARGS"
echo testsuite.at:352 >"$at_check_line_file"

if test -n "$at_traceon" \
  && at_func_check_newline "$VALGRIND testall -large $STARGS"; then
  ( $at_traceon; $VALGRIND testall -large $STARGS ) >"$at_stdout" 2>"$at_stder1"
  at_func_filter_trace $?
else
  ( :; $VALGRIND testall -large $STARGS ) >"$at_stdout" 2>"$at_stderr"
fi
at_status=$?
at_failed=false
at_func_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_func_check_status 0 $at_status "$at_srcdir/testsuite.at:352"

$at_failed && at_func_log_failure
$at_traceon; }

  $at_traceoff
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 | eval $at_tee_pipe
at_status=`cat "$at_status_file"`
#AT_STOP_71
